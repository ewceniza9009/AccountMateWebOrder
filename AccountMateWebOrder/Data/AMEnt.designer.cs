#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccountMateWebOrder.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AM.Sample.Co")]
	public partial class AMEntDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInventory(Inventory instance);
    partial void UpdateInventory(Inventory instance);
    partial void DeleteInventory(Inventory instance);
    partial void InsertInventoryPrice(InventoryPrice instance);
    partial void UpdateInventoryPrice(InventoryPrice instance);
    partial void DeleteInventoryPrice(InventoryPrice instance);
    partial void InsertInventoryListPrice(InventoryListPrice instance);
    partial void UpdateInventoryListPrice(InventoryListPrice instance);
    partial void DeleteInventoryListPrice(InventoryListPrice instance);
    partial void InsertInventoryWarehouse(InventoryWarehouse instance);
    partial void UpdateInventoryWarehouse(InventoryWarehouse instance);
    partial void DeleteInventoryWarehouse(InventoryWarehouse instance);
    partial void InsertInventoryTierPrice(InventoryTierPrice instance);
    partial void UpdateInventoryTierPrice(InventoryTierPrice instance);
    partial void DeleteInventoryTierPrice(InventoryTierPrice instance);
    partial void InsertInventorySpecialPrice(InventorySpecialPrice instance);
    partial void UpdateInventorySpecialPrice(InventorySpecialPrice instance);
    partial void DeleteInventorySpecialPrice(InventorySpecialPrice instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertUnitOfMeasure(UnitOfMeasure instance);
    partial void UpdateUnitOfMeasure(UnitOfMeasure instance);
    partial void DeleteUnitOfMeasure(UnitOfMeasure instance);
    #endregion
		
		public AMEntDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AM_Sample_CoConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AMEntDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AMEntDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AMEntDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AMEntDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Inventory> Inventories
		{
			get
			{
				return this.GetTable<Inventory>();
			}
		}
		
		public System.Data.Linq.Table<InventoryPrice> InventoryPrices
		{
			get
			{
				return this.GetTable<InventoryPrice>();
			}
		}
		
		public System.Data.Linq.Table<InventoryListPrice> InventoryListPrices
		{
			get
			{
				return this.GetTable<InventoryListPrice>();
			}
		}
		
		public System.Data.Linq.Table<InventoryWarehouse> InventoryWarehouses
		{
			get
			{
				return this.GetTable<InventoryWarehouse>();
			}
		}
		
		public System.Data.Linq.Table<InventoryTierPrice> InventoryTierPrices
		{
			get
			{
				return this.GetTable<InventoryTierPrice>();
			}
		}
		
		public System.Data.Linq.Table<InventorySpecialPrice> InventorySpecialPrices
		{
			get
			{
				return this.GetTable<InventorySpecialPrice>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<UnitOfMeasure> UnitOfMeasures
		{
			get
			{
				return this.GetTable<UnitOfMeasure>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory")]
	public partial class Inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ItemCode;
		
		private string _Description;
		
		private string _ShortDescription;
		
		private System.Nullable<int> _InventoryTypeID;
		
		private short _Status;
		
		private bool _FixedCategory;
		
		private string _Barcode1;
		
		private string _Barcode2;
		
		private bool _UseInSOAR;
		
		private bool _UseInPO;
		
		private bool _UseInMI;
		
		private bool _IsSerialized;
		
		private bool _IsLotControlled;
		
		private bool _IsKit;
		
		private bool _UseAuthorizedUOM;
		
		private System.Nullable<int> _StockUOMID;
		
		private System.Nullable<int> _SaleUOMID;
		
		private System.Nullable<int> _StorageUOMID;
		
		private System.Nullable<int> _PurchaseUOMID;
		
		private System.Nullable<int> _SpecificationType1ID;
		
		private System.Nullable<int> _SpecificationType2ID;
		
		private System.Nullable<int> _SpecificationType3ID;
		
		private System.Nullable<int> _SpecificationType4ID;
		
		private System.Nullable<int> _SpecificationType5ID;
		
		private decimal _Weight;
		
		private byte _QtyDecimalPlaces;
		
		private byte _CostMethod;
		
		private bool _PreassignSerialNumber;
		
		private string _LastSerialNumberUsed;
		
		private bool _PrintLotNumberOnInvoice;
		
		private bool _IsCheckOnhand;
		
		private bool _IsUpdateOnhand;
		
		private bool _UseKitNumber;
		
		private long _NextKitNumber;
		
		private bool _KitRequirePrebuild;
		
		private bool _PrintKitNumberOnInvoice;
		
		private bool _IsKitCustomizable;
		
		private bool _IsPriceFromComponents;
		
		private bool _IsSpecification;
		
		private bool _IsUpsellBySpecification;
		
		private bool _AllowNegativeOnhandQty;
		
		private bool _AllowNegativePrice;
		
		private bool _AllowOverwriteDescription;
		
		private bool _AllowOverwritePrice;
		
		private bool _AllowOverwriteDiscount;
		
		private bool _AllowOverwriteTax;
		
		private bool _AllowOverwriteWeight;
		
		private bool _AllowOverwriteRevenueCode;
		
		private bool _AllowOverwriteCommission;
		
		private bool _AllowOverwriteInvcRemark;
		
		private bool _AllowNegativeInvoiceQty;
		
		private bool _AllowOverwriteWORemark;
		
		private bool _AllowOverwritePORemark;
		
		private bool _AllowOverwriteRMARemark;
		
		private bool _AllowOverwriteSORemark;
		
		private bool _PrintRemarkOnInvoice;
		
		private bool _PrintRemarkOnARPackSlip;
		
		private bool _PrintRemarkOnSO;
		
		private bool _PrintRemarkOnSOPickList;
		
		private bool _PrintRemarkOnSOPackSlip;
		
		private bool _PrintRemarkOnPO;
		
		private bool _PrintRemarkOnWO;
		
		private bool _PrintRemarkOnRMA;
		
		private bool _PrintRemarkOnRMAPickList;
		
		private string _Remarks;
		
		private byte _TypeOfItem;
		
		private bool _UseAutomaticReturnCost;
		
		private byte _AutomaticReturnCostType;
		
		private decimal _MSRP;
		
		private System.Nullable<int> _ItemPriceGroupID;
		
		private System.Nullable<byte> _CheckMinimumPriceOption;
		
		private System.Nullable<byte> _MinimumPriceType;
		
		private decimal _MinPricePctAboveCost;
		
		private decimal _MinPriceAmtAboveCost;
		
		private decimal _MaximumDiscountRate;
		
		private System.Nullable<int> _CommissionID;
		
		private decimal _RepairCharge;
		
		private decimal _MinimumRestockingAmount;
		
		private decimal _RestockingRate;
		
		private bool _PrintSerialNumberOnInvoice;
		
		private bool _CheckLotMinimumShelfLife;
		
		private short _MinimumDaysToSellLot;
		
		private short _MinimumDaysToUseLot;
		
		private bool _AllowDiscard;
		
		private bool _AllowRepair;
		
		private bool _IsTaxable1;
		
		private bool _IsTaxable2;
		
		private System.Nullable<int> _SalesTaxCodeID;
		
		private bool _AmortizeRevenue;
		
		private byte _AmortizationMethod;
		
		private byte _AmortizationFrequency;
		
		private short _AmortizationCycles;
		
		private bool _AllowOverwriteRTVRemark;
		
		private bool _PrintRemarkOnRTV;
		
		private bool _PrintRemarkOnRTVPickList;
		
		private System.DateTime _DateCreated;
		
		private string _CreatedBy;
		
		private System.DateTime _DateModified;
		
		private string _ModifiedBy;
		
		private EntitySet<InventoryPrice> _InventoryPrices;
		
		private EntitySet<InventoryWarehouse> _InventoryWarehouses;
		
		private EntityRef<UnitOfMeasure> _UnitOfMeasure;
		
		private EntityRef<UnitOfMeasure> _UnitOfMeasure1;
		
		private EntityRef<UnitOfMeasure> _UnitOfMeasure2;
		
		private EntityRef<UnitOfMeasure> _UnitOfMeasure3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnInventoryTypeIDChanging(System.Nullable<int> value);
    partial void OnInventoryTypeIDChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnFixedCategoryChanging(bool value);
    partial void OnFixedCategoryChanged();
    partial void OnBarcode1Changing(string value);
    partial void OnBarcode1Changed();
    partial void OnBarcode2Changing(string value);
    partial void OnBarcode2Changed();
    partial void OnUseInSOARChanging(bool value);
    partial void OnUseInSOARChanged();
    partial void OnUseInPOChanging(bool value);
    partial void OnUseInPOChanged();
    partial void OnUseInMIChanging(bool value);
    partial void OnUseInMIChanged();
    partial void OnIsSerializedChanging(bool value);
    partial void OnIsSerializedChanged();
    partial void OnIsLotControlledChanging(bool value);
    partial void OnIsLotControlledChanged();
    partial void OnIsKitChanging(bool value);
    partial void OnIsKitChanged();
    partial void OnUseAuthorizedUOMChanging(bool value);
    partial void OnUseAuthorizedUOMChanged();
    partial void OnStockUOMIDChanging(System.Nullable<int> value);
    partial void OnStockUOMIDChanged();
    partial void OnSaleUOMIDChanging(System.Nullable<int> value);
    partial void OnSaleUOMIDChanged();
    partial void OnStorageUOMIDChanging(System.Nullable<int> value);
    partial void OnStorageUOMIDChanged();
    partial void OnPurchaseUOMIDChanging(System.Nullable<int> value);
    partial void OnPurchaseUOMIDChanged();
    partial void OnSpecificationType1IDChanging(System.Nullable<int> value);
    partial void OnSpecificationType1IDChanged();
    partial void OnSpecificationType2IDChanging(System.Nullable<int> value);
    partial void OnSpecificationType2IDChanged();
    partial void OnSpecificationType3IDChanging(System.Nullable<int> value);
    partial void OnSpecificationType3IDChanged();
    partial void OnSpecificationType4IDChanging(System.Nullable<int> value);
    partial void OnSpecificationType4IDChanged();
    partial void OnSpecificationType5IDChanging(System.Nullable<int> value);
    partial void OnSpecificationType5IDChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnQtyDecimalPlacesChanging(byte value);
    partial void OnQtyDecimalPlacesChanged();
    partial void OnCostMethodChanging(byte value);
    partial void OnCostMethodChanged();
    partial void OnPreassignSerialNumberChanging(bool value);
    partial void OnPreassignSerialNumberChanged();
    partial void OnLastSerialNumberUsedChanging(string value);
    partial void OnLastSerialNumberUsedChanged();
    partial void OnPrintLotNumberOnInvoiceChanging(bool value);
    partial void OnPrintLotNumberOnInvoiceChanged();
    partial void OnIsCheckOnhandChanging(bool value);
    partial void OnIsCheckOnhandChanged();
    partial void OnIsUpdateOnhandChanging(bool value);
    partial void OnIsUpdateOnhandChanged();
    partial void OnUseKitNumberChanging(bool value);
    partial void OnUseKitNumberChanged();
    partial void OnNextKitNumberChanging(long value);
    partial void OnNextKitNumberChanged();
    partial void OnKitRequirePrebuildChanging(bool value);
    partial void OnKitRequirePrebuildChanged();
    partial void OnPrintKitNumberOnInvoiceChanging(bool value);
    partial void OnPrintKitNumberOnInvoiceChanged();
    partial void OnIsKitCustomizableChanging(bool value);
    partial void OnIsKitCustomizableChanged();
    partial void OnIsPriceFromComponentsChanging(bool value);
    partial void OnIsPriceFromComponentsChanged();
    partial void OnIsSpecificationChanging(bool value);
    partial void OnIsSpecificationChanged();
    partial void OnIsUpsellBySpecificationChanging(bool value);
    partial void OnIsUpsellBySpecificationChanged();
    partial void OnAllowNegativeOnhandQtyChanging(bool value);
    partial void OnAllowNegativeOnhandQtyChanged();
    partial void OnAllowNegativePriceChanging(bool value);
    partial void OnAllowNegativePriceChanged();
    partial void OnAllowOverwriteDescriptionChanging(bool value);
    partial void OnAllowOverwriteDescriptionChanged();
    partial void OnAllowOverwritePriceChanging(bool value);
    partial void OnAllowOverwritePriceChanged();
    partial void OnAllowOverwriteDiscountChanging(bool value);
    partial void OnAllowOverwriteDiscountChanged();
    partial void OnAllowOverwriteTaxChanging(bool value);
    partial void OnAllowOverwriteTaxChanged();
    partial void OnAllowOverwriteWeightChanging(bool value);
    partial void OnAllowOverwriteWeightChanged();
    partial void OnAllowOverwriteRevenueCodeChanging(bool value);
    partial void OnAllowOverwriteRevenueCodeChanged();
    partial void OnAllowOverwriteCommissionChanging(bool value);
    partial void OnAllowOverwriteCommissionChanged();
    partial void OnAllowOverwriteInvcRemarkChanging(bool value);
    partial void OnAllowOverwriteInvcRemarkChanged();
    partial void OnAllowNegativeInvoiceQtyChanging(bool value);
    partial void OnAllowNegativeInvoiceQtyChanged();
    partial void OnAllowOverwriteWORemarkChanging(bool value);
    partial void OnAllowOverwriteWORemarkChanged();
    partial void OnAllowOverwritePORemarkChanging(bool value);
    partial void OnAllowOverwritePORemarkChanged();
    partial void OnAllowOverwriteRMARemarkChanging(bool value);
    partial void OnAllowOverwriteRMARemarkChanged();
    partial void OnAllowOverwriteSORemarkChanging(bool value);
    partial void OnAllowOverwriteSORemarkChanged();
    partial void OnPrintRemarkOnInvoiceChanging(bool value);
    partial void OnPrintRemarkOnInvoiceChanged();
    partial void OnPrintRemarkOnARPackSlipChanging(bool value);
    partial void OnPrintRemarkOnARPackSlipChanged();
    partial void OnPrintRemarkOnSOChanging(bool value);
    partial void OnPrintRemarkOnSOChanged();
    partial void OnPrintRemarkOnSOPickListChanging(bool value);
    partial void OnPrintRemarkOnSOPickListChanged();
    partial void OnPrintRemarkOnSOPackSlipChanging(bool value);
    partial void OnPrintRemarkOnSOPackSlipChanged();
    partial void OnPrintRemarkOnPOChanging(bool value);
    partial void OnPrintRemarkOnPOChanged();
    partial void OnPrintRemarkOnWOChanging(bool value);
    partial void OnPrintRemarkOnWOChanged();
    partial void OnPrintRemarkOnRMAChanging(bool value);
    partial void OnPrintRemarkOnRMAChanged();
    partial void OnPrintRemarkOnRMAPickListChanging(bool value);
    partial void OnPrintRemarkOnRMAPickListChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnTypeOfItemChanging(byte value);
    partial void OnTypeOfItemChanged();
    partial void OnUseAutomaticReturnCostChanging(bool value);
    partial void OnUseAutomaticReturnCostChanged();
    partial void OnAutomaticReturnCostTypeChanging(byte value);
    partial void OnAutomaticReturnCostTypeChanged();
    partial void OnMSRPChanging(decimal value);
    partial void OnMSRPChanged();
    partial void OnItemPriceGroupIDChanging(System.Nullable<int> value);
    partial void OnItemPriceGroupIDChanged();
    partial void OnCheckMinimumPriceOptionChanging(System.Nullable<byte> value);
    partial void OnCheckMinimumPriceOptionChanged();
    partial void OnMinimumPriceTypeChanging(System.Nullable<byte> value);
    partial void OnMinimumPriceTypeChanged();
    partial void OnMinPricePctAboveCostChanging(decimal value);
    partial void OnMinPricePctAboveCostChanged();
    partial void OnMinPriceAmtAboveCostChanging(decimal value);
    partial void OnMinPriceAmtAboveCostChanged();
    partial void OnMaximumDiscountRateChanging(decimal value);
    partial void OnMaximumDiscountRateChanged();
    partial void OnCommissionIDChanging(System.Nullable<int> value);
    partial void OnCommissionIDChanged();
    partial void OnRepairChargeChanging(decimal value);
    partial void OnRepairChargeChanged();
    partial void OnMinimumRestockingAmountChanging(decimal value);
    partial void OnMinimumRestockingAmountChanged();
    partial void OnRestockingRateChanging(decimal value);
    partial void OnRestockingRateChanged();
    partial void OnPrintSerialNumberOnInvoiceChanging(bool value);
    partial void OnPrintSerialNumberOnInvoiceChanged();
    partial void OnCheckLotMinimumShelfLifeChanging(bool value);
    partial void OnCheckLotMinimumShelfLifeChanged();
    partial void OnMinimumDaysToSellLotChanging(short value);
    partial void OnMinimumDaysToSellLotChanged();
    partial void OnMinimumDaysToUseLotChanging(short value);
    partial void OnMinimumDaysToUseLotChanged();
    partial void OnAllowDiscardChanging(bool value);
    partial void OnAllowDiscardChanged();
    partial void OnAllowRepairChanging(bool value);
    partial void OnAllowRepairChanged();
    partial void OnIsTaxable1Changing(bool value);
    partial void OnIsTaxable1Changed();
    partial void OnIsTaxable2Changing(bool value);
    partial void OnIsTaxable2Changed();
    partial void OnSalesTaxCodeIDChanging(System.Nullable<int> value);
    partial void OnSalesTaxCodeIDChanged();
    partial void OnAmortizeRevenueChanging(bool value);
    partial void OnAmortizeRevenueChanged();
    partial void OnAmortizationMethodChanging(byte value);
    partial void OnAmortizationMethodChanged();
    partial void OnAmortizationFrequencyChanging(byte value);
    partial void OnAmortizationFrequencyChanged();
    partial void OnAmortizationCyclesChanging(short value);
    partial void OnAmortizationCyclesChanged();
    partial void OnAllowOverwriteRTVRemarkChanging(bool value);
    partial void OnAllowOverwriteRTVRemarkChanged();
    partial void OnPrintRemarkOnRTVChanging(bool value);
    partial void OnPrintRemarkOnRTVChanged();
    partial void OnPrintRemarkOnRTVPickListChanging(bool value);
    partial void OnPrintRemarkOnRTVPickListChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    #endregion
		
		public Inventory()
		{
			this._InventoryPrices = new EntitySet<InventoryPrice>(new Action<InventoryPrice>(this.attach_InventoryPrices), new Action<InventoryPrice>(this.detach_InventoryPrices));
			this._InventoryWarehouses = new EntitySet<InventoryWarehouse>(new Action<InventoryWarehouse>(this.attach_InventoryWarehouses), new Action<InventoryWarehouse>(this.detach_InventoryWarehouses));
			this._UnitOfMeasure = default(EntityRef<UnitOfMeasure>);
			this._UnitOfMeasure1 = default(EntityRef<UnitOfMeasure>);
			this._UnitOfMeasure2 = default(EntityRef<UnitOfMeasure>);
			this._UnitOfMeasure3 = default(EntityRef<UnitOfMeasure>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryTypeID", DbType="Int")]
		public System.Nullable<int> InventoryTypeID
		{
			get
			{
				return this._InventoryTypeID;
			}
			set
			{
				if ((this._InventoryTypeID != value))
				{
					this.OnInventoryTypeIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryTypeID = value;
					this.SendPropertyChanged("InventoryTypeID");
					this.OnInventoryTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedCategory", DbType="Bit NOT NULL")]
		public bool FixedCategory
		{
			get
			{
				return this._FixedCategory;
			}
			set
			{
				if ((this._FixedCategory != value))
				{
					this.OnFixedCategoryChanging(value);
					this.SendPropertyChanging();
					this._FixedCategory = value;
					this.SendPropertyChanged("FixedCategory");
					this.OnFixedCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode1", DbType="NVarChar(20)")]
		public string Barcode1
		{
			get
			{
				return this._Barcode1;
			}
			set
			{
				if ((this._Barcode1 != value))
				{
					this.OnBarcode1Changing(value);
					this.SendPropertyChanging();
					this._Barcode1 = value;
					this.SendPropertyChanged("Barcode1");
					this.OnBarcode1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode2", DbType="NVarChar(20)")]
		public string Barcode2
		{
			get
			{
				return this._Barcode2;
			}
			set
			{
				if ((this._Barcode2 != value))
				{
					this.OnBarcode2Changing(value);
					this.SendPropertyChanging();
					this._Barcode2 = value;
					this.SendPropertyChanged("Barcode2");
					this.OnBarcode2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseInSOAR", DbType="Bit NOT NULL")]
		public bool UseInSOAR
		{
			get
			{
				return this._UseInSOAR;
			}
			set
			{
				if ((this._UseInSOAR != value))
				{
					this.OnUseInSOARChanging(value);
					this.SendPropertyChanging();
					this._UseInSOAR = value;
					this.SendPropertyChanged("UseInSOAR");
					this.OnUseInSOARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseInPO", DbType="Bit NOT NULL")]
		public bool UseInPO
		{
			get
			{
				return this._UseInPO;
			}
			set
			{
				if ((this._UseInPO != value))
				{
					this.OnUseInPOChanging(value);
					this.SendPropertyChanging();
					this._UseInPO = value;
					this.SendPropertyChanged("UseInPO");
					this.OnUseInPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseInMI", DbType="Bit NOT NULL")]
		public bool UseInMI
		{
			get
			{
				return this._UseInMI;
			}
			set
			{
				if ((this._UseInMI != value))
				{
					this.OnUseInMIChanging(value);
					this.SendPropertyChanging();
					this._UseInMI = value;
					this.SendPropertyChanged("UseInMI");
					this.OnUseInMIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSerialized", DbType="Bit NOT NULL")]
		public bool IsSerialized
		{
			get
			{
				return this._IsSerialized;
			}
			set
			{
				if ((this._IsSerialized != value))
				{
					this.OnIsSerializedChanging(value);
					this.SendPropertyChanging();
					this._IsSerialized = value;
					this.SendPropertyChanged("IsSerialized");
					this.OnIsSerializedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLotControlled", DbType="Bit NOT NULL")]
		public bool IsLotControlled
		{
			get
			{
				return this._IsLotControlled;
			}
			set
			{
				if ((this._IsLotControlled != value))
				{
					this.OnIsLotControlledChanging(value);
					this.SendPropertyChanging();
					this._IsLotControlled = value;
					this.SendPropertyChanged("IsLotControlled");
					this.OnIsLotControlledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsKit", DbType="Bit NOT NULL")]
		public bool IsKit
		{
			get
			{
				return this._IsKit;
			}
			set
			{
				if ((this._IsKit != value))
				{
					this.OnIsKitChanging(value);
					this.SendPropertyChanging();
					this._IsKit = value;
					this.SendPropertyChanged("IsKit");
					this.OnIsKitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseAuthorizedUOM", DbType="Bit NOT NULL")]
		public bool UseAuthorizedUOM
		{
			get
			{
				return this._UseAuthorizedUOM;
			}
			set
			{
				if ((this._UseAuthorizedUOM != value))
				{
					this.OnUseAuthorizedUOMChanging(value);
					this.SendPropertyChanging();
					this._UseAuthorizedUOM = value;
					this.SendPropertyChanged("UseAuthorizedUOM");
					this.OnUseAuthorizedUOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockUOMID", DbType="Int")]
		public System.Nullable<int> StockUOMID
		{
			get
			{
				return this._StockUOMID;
			}
			set
			{
				if ((this._StockUOMID != value))
				{
					if (this._UnitOfMeasure2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockUOMIDChanging(value);
					this.SendPropertyChanging();
					this._StockUOMID = value;
					this.SendPropertyChanged("StockUOMID");
					this.OnStockUOMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleUOMID", DbType="Int")]
		public System.Nullable<int> SaleUOMID
		{
			get
			{
				return this._SaleUOMID;
			}
			set
			{
				if ((this._SaleUOMID != value))
				{
					if (this._UnitOfMeasure1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSaleUOMIDChanging(value);
					this.SendPropertyChanging();
					this._SaleUOMID = value;
					this.SendPropertyChanged("SaleUOMID");
					this.OnSaleUOMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageUOMID", DbType="Int")]
		public System.Nullable<int> StorageUOMID
		{
			get
			{
				return this._StorageUOMID;
			}
			set
			{
				if ((this._StorageUOMID != value))
				{
					if (this._UnitOfMeasure3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageUOMIDChanging(value);
					this.SendPropertyChanging();
					this._StorageUOMID = value;
					this.SendPropertyChanged("StorageUOMID");
					this.OnStorageUOMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseUOMID", DbType="Int")]
		public System.Nullable<int> PurchaseUOMID
		{
			get
			{
				return this._PurchaseUOMID;
			}
			set
			{
				if ((this._PurchaseUOMID != value))
				{
					if (this._UnitOfMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseUOMIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseUOMID = value;
					this.SendPropertyChanged("PurchaseUOMID");
					this.OnPurchaseUOMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificationType1ID", DbType="Int")]
		public System.Nullable<int> SpecificationType1ID
		{
			get
			{
				return this._SpecificationType1ID;
			}
			set
			{
				if ((this._SpecificationType1ID != value))
				{
					this.OnSpecificationType1IDChanging(value);
					this.SendPropertyChanging();
					this._SpecificationType1ID = value;
					this.SendPropertyChanged("SpecificationType1ID");
					this.OnSpecificationType1IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificationType2ID", DbType="Int")]
		public System.Nullable<int> SpecificationType2ID
		{
			get
			{
				return this._SpecificationType2ID;
			}
			set
			{
				if ((this._SpecificationType2ID != value))
				{
					this.OnSpecificationType2IDChanging(value);
					this.SendPropertyChanging();
					this._SpecificationType2ID = value;
					this.SendPropertyChanged("SpecificationType2ID");
					this.OnSpecificationType2IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificationType3ID", DbType="Int")]
		public System.Nullable<int> SpecificationType3ID
		{
			get
			{
				return this._SpecificationType3ID;
			}
			set
			{
				if ((this._SpecificationType3ID != value))
				{
					this.OnSpecificationType3IDChanging(value);
					this.SendPropertyChanging();
					this._SpecificationType3ID = value;
					this.SendPropertyChanged("SpecificationType3ID");
					this.OnSpecificationType3IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificationType4ID", DbType="Int")]
		public System.Nullable<int> SpecificationType4ID
		{
			get
			{
				return this._SpecificationType4ID;
			}
			set
			{
				if ((this._SpecificationType4ID != value))
				{
					this.OnSpecificationType4IDChanging(value);
					this.SendPropertyChanging();
					this._SpecificationType4ID = value;
					this.SendPropertyChanged("SpecificationType4ID");
					this.OnSpecificationType4IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificationType5ID", DbType="Int")]
		public System.Nullable<int> SpecificationType5ID
		{
			get
			{
				return this._SpecificationType5ID;
			}
			set
			{
				if ((this._SpecificationType5ID != value))
				{
					this.OnSpecificationType5IDChanging(value);
					this.SendPropertyChanging();
					this._SpecificationType5ID = value;
					this.SendPropertyChanged("SpecificationType5ID");
					this.OnSpecificationType5IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(20,4) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyDecimalPlaces", DbType="TinyInt NOT NULL")]
		public byte QtyDecimalPlaces
		{
			get
			{
				return this._QtyDecimalPlaces;
			}
			set
			{
				if ((this._QtyDecimalPlaces != value))
				{
					this.OnQtyDecimalPlacesChanging(value);
					this.SendPropertyChanging();
					this._QtyDecimalPlaces = value;
					this.SendPropertyChanged("QtyDecimalPlaces");
					this.OnQtyDecimalPlacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostMethod", DbType="TinyInt NOT NULL")]
		public byte CostMethod
		{
			get
			{
				return this._CostMethod;
			}
			set
			{
				if ((this._CostMethod != value))
				{
					this.OnCostMethodChanging(value);
					this.SendPropertyChanging();
					this._CostMethod = value;
					this.SendPropertyChanged("CostMethod");
					this.OnCostMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreassignSerialNumber", DbType="Bit NOT NULL")]
		public bool PreassignSerialNumber
		{
			get
			{
				return this._PreassignSerialNumber;
			}
			set
			{
				if ((this._PreassignSerialNumber != value))
				{
					this.OnPreassignSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._PreassignSerialNumber = value;
					this.SendPropertyChanged("PreassignSerialNumber");
					this.OnPreassignSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSerialNumberUsed", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string LastSerialNumberUsed
		{
			get
			{
				return this._LastSerialNumberUsed;
			}
			set
			{
				if ((this._LastSerialNumberUsed != value))
				{
					this.OnLastSerialNumberUsedChanging(value);
					this.SendPropertyChanging();
					this._LastSerialNumberUsed = value;
					this.SendPropertyChanged("LastSerialNumberUsed");
					this.OnLastSerialNumberUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintLotNumberOnInvoice", DbType="Bit NOT NULL")]
		public bool PrintLotNumberOnInvoice
		{
			get
			{
				return this._PrintLotNumberOnInvoice;
			}
			set
			{
				if ((this._PrintLotNumberOnInvoice != value))
				{
					this.OnPrintLotNumberOnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._PrintLotNumberOnInvoice = value;
					this.SendPropertyChanged("PrintLotNumberOnInvoice");
					this.OnPrintLotNumberOnInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCheckOnhand", DbType="Bit NOT NULL")]
		public bool IsCheckOnhand
		{
			get
			{
				return this._IsCheckOnhand;
			}
			set
			{
				if ((this._IsCheckOnhand != value))
				{
					this.OnIsCheckOnhandChanging(value);
					this.SendPropertyChanging();
					this._IsCheckOnhand = value;
					this.SendPropertyChanged("IsCheckOnhand");
					this.OnIsCheckOnhandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUpdateOnhand", DbType="Bit NOT NULL")]
		public bool IsUpdateOnhand
		{
			get
			{
				return this._IsUpdateOnhand;
			}
			set
			{
				if ((this._IsUpdateOnhand != value))
				{
					this.OnIsUpdateOnhandChanging(value);
					this.SendPropertyChanging();
					this._IsUpdateOnhand = value;
					this.SendPropertyChanged("IsUpdateOnhand");
					this.OnIsUpdateOnhandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseKitNumber", DbType="Bit NOT NULL")]
		public bool UseKitNumber
		{
			get
			{
				return this._UseKitNumber;
			}
			set
			{
				if ((this._UseKitNumber != value))
				{
					this.OnUseKitNumberChanging(value);
					this.SendPropertyChanging();
					this._UseKitNumber = value;
					this.SendPropertyChanged("UseKitNumber");
					this.OnUseKitNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextKitNumber", DbType="BigInt NOT NULL")]
		public long NextKitNumber
		{
			get
			{
				return this._NextKitNumber;
			}
			set
			{
				if ((this._NextKitNumber != value))
				{
					this.OnNextKitNumberChanging(value);
					this.SendPropertyChanging();
					this._NextKitNumber = value;
					this.SendPropertyChanged("NextKitNumber");
					this.OnNextKitNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KitRequirePrebuild", DbType="Bit NOT NULL")]
		public bool KitRequirePrebuild
		{
			get
			{
				return this._KitRequirePrebuild;
			}
			set
			{
				if ((this._KitRequirePrebuild != value))
				{
					this.OnKitRequirePrebuildChanging(value);
					this.SendPropertyChanging();
					this._KitRequirePrebuild = value;
					this.SendPropertyChanged("KitRequirePrebuild");
					this.OnKitRequirePrebuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintKitNumberOnInvoice", DbType="Bit NOT NULL")]
		public bool PrintKitNumberOnInvoice
		{
			get
			{
				return this._PrintKitNumberOnInvoice;
			}
			set
			{
				if ((this._PrintKitNumberOnInvoice != value))
				{
					this.OnPrintKitNumberOnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._PrintKitNumberOnInvoice = value;
					this.SendPropertyChanged("PrintKitNumberOnInvoice");
					this.OnPrintKitNumberOnInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsKitCustomizable", DbType="Bit NOT NULL")]
		public bool IsKitCustomizable
		{
			get
			{
				return this._IsKitCustomizable;
			}
			set
			{
				if ((this._IsKitCustomizable != value))
				{
					this.OnIsKitCustomizableChanging(value);
					this.SendPropertyChanging();
					this._IsKitCustomizable = value;
					this.SendPropertyChanged("IsKitCustomizable");
					this.OnIsKitCustomizableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPriceFromComponents", DbType="Bit NOT NULL")]
		public bool IsPriceFromComponents
		{
			get
			{
				return this._IsPriceFromComponents;
			}
			set
			{
				if ((this._IsPriceFromComponents != value))
				{
					this.OnIsPriceFromComponentsChanging(value);
					this.SendPropertyChanging();
					this._IsPriceFromComponents = value;
					this.SendPropertyChanged("IsPriceFromComponents");
					this.OnIsPriceFromComponentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpecification", DbType="Bit NOT NULL")]
		public bool IsSpecification
		{
			get
			{
				return this._IsSpecification;
			}
			set
			{
				if ((this._IsSpecification != value))
				{
					this.OnIsSpecificationChanging(value);
					this.SendPropertyChanging();
					this._IsSpecification = value;
					this.SendPropertyChanged("IsSpecification");
					this.OnIsSpecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUpsellBySpecification", DbType="Bit NOT NULL")]
		public bool IsUpsellBySpecification
		{
			get
			{
				return this._IsUpsellBySpecification;
			}
			set
			{
				if ((this._IsUpsellBySpecification != value))
				{
					this.OnIsUpsellBySpecificationChanging(value);
					this.SendPropertyChanging();
					this._IsUpsellBySpecification = value;
					this.SendPropertyChanged("IsUpsellBySpecification");
					this.OnIsUpsellBySpecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowNegativeOnhandQty", DbType="Bit NOT NULL")]
		public bool AllowNegativeOnhandQty
		{
			get
			{
				return this._AllowNegativeOnhandQty;
			}
			set
			{
				if ((this._AllowNegativeOnhandQty != value))
				{
					this.OnAllowNegativeOnhandQtyChanging(value);
					this.SendPropertyChanging();
					this._AllowNegativeOnhandQty = value;
					this.SendPropertyChanged("AllowNegativeOnhandQty");
					this.OnAllowNegativeOnhandQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowNegativePrice", DbType="Bit NOT NULL")]
		public bool AllowNegativePrice
		{
			get
			{
				return this._AllowNegativePrice;
			}
			set
			{
				if ((this._AllowNegativePrice != value))
				{
					this.OnAllowNegativePriceChanging(value);
					this.SendPropertyChanging();
					this._AllowNegativePrice = value;
					this.SendPropertyChanged("AllowNegativePrice");
					this.OnAllowNegativePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOverwriteDescription", DbType="Bit NOT NULL")]
		public bool AllowOverwriteDescription
		{
			get
			{
				return this._AllowOverwriteDescription;
			}
			set
			{
				if ((this._AllowOverwriteDescription != value))
				{
					this.OnAllowOverwriteDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AllowOverwriteDescription = value;
					this.SendPropertyChanged("AllowOverwriteDescription");
					this.OnAllowOverwriteDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOverwritePrice", DbType="Bit NOT NULL")]
		public bool AllowOverwritePrice
		{
			get
			{
				return this._AllowOverwritePrice;
			}
			set
			{
				if ((this._AllowOverwritePrice != value))
				{
					this.OnAllowOverwritePriceChanging(value);
					this.SendPropertyChanging();
					this._AllowOverwritePrice = value;
					this.SendPropertyChanged("AllowOverwritePrice");
					this.OnAllowOverwritePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOverwriteDiscount", DbType="Bit NOT NULL")]
		public bool AllowOverwriteDiscount
		{
			get
			{
				return this._AllowOverwriteDiscount;
			}
			set
			{
				if ((this._AllowOverwriteDiscount != value))
				{
					this.OnAllowOverwriteDiscountChanging(value);
					this.SendPropertyChanging();
					this._AllowOverwriteDiscount = value;
					this.SendPropertyChanged("AllowOverwriteDiscount");
					this.OnAllowOverwriteDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOverwriteTax", DbType="Bit NOT NULL")]
		public bool AllowOverwriteTax
		{
			get
			{
				return this._AllowOverwriteTax;
			}
			set
			{
				if ((this._AllowOverwriteTax != value))
				{
					this.OnAllowOverwriteTaxChanging(value);
					this.SendPropertyChanging();
					this._AllowOverwriteTax = value;
					this.SendPropertyChanged("AllowOverwriteTax");
					this.OnAllowOverwriteTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOverwriteWeight", DbType="Bit NOT NULL")]
		public bool AllowOverwriteWeight
		{
			get
			{
				return this._AllowOverwriteWeight;
			}
			set
			{
				if ((this._AllowOverwriteWeight != value))
				{
					this.OnAllowOverwriteWeightChanging(value);
					this.SendPropertyChanging();
					this._AllowOverwriteWeight = value;
					this.SendPropertyChanged("AllowOverwriteWeight");
					this.OnAllowOverwriteWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOverwriteRevenueCode", DbType="Bit NOT NULL")]
		public bool AllowOverwriteRevenueCode
		{
			get
			{
				return this._AllowOverwriteRevenueCode;
			}
			set
			{
				if ((this._AllowOverwriteRevenueCode != value))
				{
					this.OnAllowOverwriteRevenueCodeChanging(value);
					this.SendPropertyChanging();
					this._AllowOverwriteRevenueCode = value;
					this.SendPropertyChanged("AllowOverwriteRevenueCode");
					this.OnAllowOverwriteRevenueCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOverwriteCommission", DbType="Bit NOT NULL")]
		public bool AllowOverwriteCommission
		{
			get
			{
				return this._AllowOverwriteCommission;
			}
			set
			{
				if ((this._AllowOverwriteCommission != value))
				{
					this.OnAllowOverwriteCommissionChanging(value);
					this.SendPropertyChanging();
					this._AllowOverwriteCommission = value;
					this.SendPropertyChanged("AllowOverwriteCommission");
					this.OnAllowOverwriteCommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOverwriteInvcRemark", DbType="Bit NOT NULL")]
		public bool AllowOverwriteInvcRemark
		{
			get
			{
				return this._AllowOverwriteInvcRemark;
			}
			set
			{
				if ((this._AllowOverwriteInvcRemark != value))
				{
					this.OnAllowOverwriteInvcRemarkChanging(value);
					this.SendPropertyChanging();
					this._AllowOverwriteInvcRemark = value;
					this.SendPropertyChanged("AllowOverwriteInvcRemark");
					this.OnAllowOverwriteInvcRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowNegativeInvoiceQty", DbType="Bit NOT NULL")]
		public bool AllowNegativeInvoiceQty
		{
			get
			{
				return this._AllowNegativeInvoiceQty;
			}
			set
			{
				if ((this._AllowNegativeInvoiceQty != value))
				{
					this.OnAllowNegativeInvoiceQtyChanging(value);
					this.SendPropertyChanging();
					this._AllowNegativeInvoiceQty = value;
					this.SendPropertyChanged("AllowNegativeInvoiceQty");
					this.OnAllowNegativeInvoiceQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOverwriteWORemark", DbType="Bit NOT NULL")]
		public bool AllowOverwriteWORemark
		{
			get
			{
				return this._AllowOverwriteWORemark;
			}
			set
			{
				if ((this._AllowOverwriteWORemark != value))
				{
					this.OnAllowOverwriteWORemarkChanging(value);
					this.SendPropertyChanging();
					this._AllowOverwriteWORemark = value;
					this.SendPropertyChanged("AllowOverwriteWORemark");
					this.OnAllowOverwriteWORemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOverwritePORemark", DbType="Bit NOT NULL")]
		public bool AllowOverwritePORemark
		{
			get
			{
				return this._AllowOverwritePORemark;
			}
			set
			{
				if ((this._AllowOverwritePORemark != value))
				{
					this.OnAllowOverwritePORemarkChanging(value);
					this.SendPropertyChanging();
					this._AllowOverwritePORemark = value;
					this.SendPropertyChanged("AllowOverwritePORemark");
					this.OnAllowOverwritePORemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOverwriteRMARemark", DbType="Bit NOT NULL")]
		public bool AllowOverwriteRMARemark
		{
			get
			{
				return this._AllowOverwriteRMARemark;
			}
			set
			{
				if ((this._AllowOverwriteRMARemark != value))
				{
					this.OnAllowOverwriteRMARemarkChanging(value);
					this.SendPropertyChanging();
					this._AllowOverwriteRMARemark = value;
					this.SendPropertyChanged("AllowOverwriteRMARemark");
					this.OnAllowOverwriteRMARemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOverwriteSORemark", DbType="Bit NOT NULL")]
		public bool AllowOverwriteSORemark
		{
			get
			{
				return this._AllowOverwriteSORemark;
			}
			set
			{
				if ((this._AllowOverwriteSORemark != value))
				{
					this.OnAllowOverwriteSORemarkChanging(value);
					this.SendPropertyChanging();
					this._AllowOverwriteSORemark = value;
					this.SendPropertyChanged("AllowOverwriteSORemark");
					this.OnAllowOverwriteSORemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintRemarkOnInvoice", DbType="Bit NOT NULL")]
		public bool PrintRemarkOnInvoice
		{
			get
			{
				return this._PrintRemarkOnInvoice;
			}
			set
			{
				if ((this._PrintRemarkOnInvoice != value))
				{
					this.OnPrintRemarkOnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._PrintRemarkOnInvoice = value;
					this.SendPropertyChanged("PrintRemarkOnInvoice");
					this.OnPrintRemarkOnInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintRemarkOnARPackSlip", DbType="Bit NOT NULL")]
		public bool PrintRemarkOnARPackSlip
		{
			get
			{
				return this._PrintRemarkOnARPackSlip;
			}
			set
			{
				if ((this._PrintRemarkOnARPackSlip != value))
				{
					this.OnPrintRemarkOnARPackSlipChanging(value);
					this.SendPropertyChanging();
					this._PrintRemarkOnARPackSlip = value;
					this.SendPropertyChanged("PrintRemarkOnARPackSlip");
					this.OnPrintRemarkOnARPackSlipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintRemarkOnSO", DbType="Bit NOT NULL")]
		public bool PrintRemarkOnSO
		{
			get
			{
				return this._PrintRemarkOnSO;
			}
			set
			{
				if ((this._PrintRemarkOnSO != value))
				{
					this.OnPrintRemarkOnSOChanging(value);
					this.SendPropertyChanging();
					this._PrintRemarkOnSO = value;
					this.SendPropertyChanged("PrintRemarkOnSO");
					this.OnPrintRemarkOnSOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintRemarkOnSOPickList", DbType="Bit NOT NULL")]
		public bool PrintRemarkOnSOPickList
		{
			get
			{
				return this._PrintRemarkOnSOPickList;
			}
			set
			{
				if ((this._PrintRemarkOnSOPickList != value))
				{
					this.OnPrintRemarkOnSOPickListChanging(value);
					this.SendPropertyChanging();
					this._PrintRemarkOnSOPickList = value;
					this.SendPropertyChanged("PrintRemarkOnSOPickList");
					this.OnPrintRemarkOnSOPickListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintRemarkOnSOPackSlip", DbType="Bit NOT NULL")]
		public bool PrintRemarkOnSOPackSlip
		{
			get
			{
				return this._PrintRemarkOnSOPackSlip;
			}
			set
			{
				if ((this._PrintRemarkOnSOPackSlip != value))
				{
					this.OnPrintRemarkOnSOPackSlipChanging(value);
					this.SendPropertyChanging();
					this._PrintRemarkOnSOPackSlip = value;
					this.SendPropertyChanged("PrintRemarkOnSOPackSlip");
					this.OnPrintRemarkOnSOPackSlipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintRemarkOnPO", DbType="Bit NOT NULL")]
		public bool PrintRemarkOnPO
		{
			get
			{
				return this._PrintRemarkOnPO;
			}
			set
			{
				if ((this._PrintRemarkOnPO != value))
				{
					this.OnPrintRemarkOnPOChanging(value);
					this.SendPropertyChanging();
					this._PrintRemarkOnPO = value;
					this.SendPropertyChanged("PrintRemarkOnPO");
					this.OnPrintRemarkOnPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintRemarkOnWO", DbType="Bit NOT NULL")]
		public bool PrintRemarkOnWO
		{
			get
			{
				return this._PrintRemarkOnWO;
			}
			set
			{
				if ((this._PrintRemarkOnWO != value))
				{
					this.OnPrintRemarkOnWOChanging(value);
					this.SendPropertyChanging();
					this._PrintRemarkOnWO = value;
					this.SendPropertyChanged("PrintRemarkOnWO");
					this.OnPrintRemarkOnWOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintRemarkOnRMA", DbType="Bit NOT NULL")]
		public bool PrintRemarkOnRMA
		{
			get
			{
				return this._PrintRemarkOnRMA;
			}
			set
			{
				if ((this._PrintRemarkOnRMA != value))
				{
					this.OnPrintRemarkOnRMAChanging(value);
					this.SendPropertyChanging();
					this._PrintRemarkOnRMA = value;
					this.SendPropertyChanged("PrintRemarkOnRMA");
					this.OnPrintRemarkOnRMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintRemarkOnRMAPickList", DbType="Bit NOT NULL")]
		public bool PrintRemarkOnRMAPickList
		{
			get
			{
				return this._PrintRemarkOnRMAPickList;
			}
			set
			{
				if ((this._PrintRemarkOnRMAPickList != value))
				{
					this.OnPrintRemarkOnRMAPickListChanging(value);
					this.SendPropertyChanging();
					this._PrintRemarkOnRMAPickList = value;
					this.SendPropertyChanged("PrintRemarkOnRMAPickList");
					this.OnPrintRemarkOnRMAPickListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfItem", DbType="TinyInt NOT NULL")]
		public byte TypeOfItem
		{
			get
			{
				return this._TypeOfItem;
			}
			set
			{
				if ((this._TypeOfItem != value))
				{
					this.OnTypeOfItemChanging(value);
					this.SendPropertyChanging();
					this._TypeOfItem = value;
					this.SendPropertyChanged("TypeOfItem");
					this.OnTypeOfItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseAutomaticReturnCost", DbType="Bit NOT NULL")]
		public bool UseAutomaticReturnCost
		{
			get
			{
				return this._UseAutomaticReturnCost;
			}
			set
			{
				if ((this._UseAutomaticReturnCost != value))
				{
					this.OnUseAutomaticReturnCostChanging(value);
					this.SendPropertyChanging();
					this._UseAutomaticReturnCost = value;
					this.SendPropertyChanged("UseAutomaticReturnCost");
					this.OnUseAutomaticReturnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomaticReturnCostType", DbType="TinyInt NOT NULL")]
		public byte AutomaticReturnCostType
		{
			get
			{
				return this._AutomaticReturnCostType;
			}
			set
			{
				if ((this._AutomaticReturnCostType != value))
				{
					this.OnAutomaticReturnCostTypeChanging(value);
					this.SendPropertyChanging();
					this._AutomaticReturnCostType = value;
					this.SendPropertyChanged("AutomaticReturnCostType");
					this.OnAutomaticReturnCostTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSRP", DbType="Decimal(20,6) NOT NULL")]
		public decimal MSRP
		{
			get
			{
				return this._MSRP;
			}
			set
			{
				if ((this._MSRP != value))
				{
					this.OnMSRPChanging(value);
					this.SendPropertyChanging();
					this._MSRP = value;
					this.SendPropertyChanged("MSRP");
					this.OnMSRPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemPriceGroupID", DbType="Int")]
		public System.Nullable<int> ItemPriceGroupID
		{
			get
			{
				return this._ItemPriceGroupID;
			}
			set
			{
				if ((this._ItemPriceGroupID != value))
				{
					this.OnItemPriceGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ItemPriceGroupID = value;
					this.SendPropertyChanged("ItemPriceGroupID");
					this.OnItemPriceGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckMinimumPriceOption", DbType="TinyInt")]
		public System.Nullable<byte> CheckMinimumPriceOption
		{
			get
			{
				return this._CheckMinimumPriceOption;
			}
			set
			{
				if ((this._CheckMinimumPriceOption != value))
				{
					this.OnCheckMinimumPriceOptionChanging(value);
					this.SendPropertyChanging();
					this._CheckMinimumPriceOption = value;
					this.SendPropertyChanged("CheckMinimumPriceOption");
					this.OnCheckMinimumPriceOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumPriceType", DbType="TinyInt")]
		public System.Nullable<byte> MinimumPriceType
		{
			get
			{
				return this._MinimumPriceType;
			}
			set
			{
				if ((this._MinimumPriceType != value))
				{
					this.OnMinimumPriceTypeChanging(value);
					this.SendPropertyChanging();
					this._MinimumPriceType = value;
					this.SendPropertyChanged("MinimumPriceType");
					this.OnMinimumPriceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPricePctAboveCost", DbType="Decimal(20,4) NOT NULL")]
		public decimal MinPricePctAboveCost
		{
			get
			{
				return this._MinPricePctAboveCost;
			}
			set
			{
				if ((this._MinPricePctAboveCost != value))
				{
					this.OnMinPricePctAboveCostChanging(value);
					this.SendPropertyChanging();
					this._MinPricePctAboveCost = value;
					this.SendPropertyChanged("MinPricePctAboveCost");
					this.OnMinPricePctAboveCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPriceAmtAboveCost", DbType="Decimal(20,4) NOT NULL")]
		public decimal MinPriceAmtAboveCost
		{
			get
			{
				return this._MinPriceAmtAboveCost;
			}
			set
			{
				if ((this._MinPriceAmtAboveCost != value))
				{
					this.OnMinPriceAmtAboveCostChanging(value);
					this.SendPropertyChanging();
					this._MinPriceAmtAboveCost = value;
					this.SendPropertyChanged("MinPriceAmtAboveCost");
					this.OnMinPriceAmtAboveCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumDiscountRate", DbType="Decimal(7,4) NOT NULL")]
		public decimal MaximumDiscountRate
		{
			get
			{
				return this._MaximumDiscountRate;
			}
			set
			{
				if ((this._MaximumDiscountRate != value))
				{
					this.OnMaximumDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._MaximumDiscountRate = value;
					this.SendPropertyChanged("MaximumDiscountRate");
					this.OnMaximumDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionID", DbType="Int")]
		public System.Nullable<int> CommissionID
		{
			get
			{
				return this._CommissionID;
			}
			set
			{
				if ((this._CommissionID != value))
				{
					this.OnCommissionIDChanging(value);
					this.SendPropertyChanging();
					this._CommissionID = value;
					this.SendPropertyChanged("CommissionID");
					this.OnCommissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairCharge", DbType="Decimal(20,4) NOT NULL")]
		public decimal RepairCharge
		{
			get
			{
				return this._RepairCharge;
			}
			set
			{
				if ((this._RepairCharge != value))
				{
					this.OnRepairChargeChanging(value);
					this.SendPropertyChanging();
					this._RepairCharge = value;
					this.SendPropertyChanged("RepairCharge");
					this.OnRepairChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumRestockingAmount", DbType="Decimal(20,4) NOT NULL")]
		public decimal MinimumRestockingAmount
		{
			get
			{
				return this._MinimumRestockingAmount;
			}
			set
			{
				if ((this._MinimumRestockingAmount != value))
				{
					this.OnMinimumRestockingAmountChanging(value);
					this.SendPropertyChanging();
					this._MinimumRestockingAmount = value;
					this.SendPropertyChanged("MinimumRestockingAmount");
					this.OnMinimumRestockingAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestockingRate", DbType="Decimal(7,4) NOT NULL")]
		public decimal RestockingRate
		{
			get
			{
				return this._RestockingRate;
			}
			set
			{
				if ((this._RestockingRate != value))
				{
					this.OnRestockingRateChanging(value);
					this.SendPropertyChanging();
					this._RestockingRate = value;
					this.SendPropertyChanged("RestockingRate");
					this.OnRestockingRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintSerialNumberOnInvoice", DbType="Bit NOT NULL")]
		public bool PrintSerialNumberOnInvoice
		{
			get
			{
				return this._PrintSerialNumberOnInvoice;
			}
			set
			{
				if ((this._PrintSerialNumberOnInvoice != value))
				{
					this.OnPrintSerialNumberOnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._PrintSerialNumberOnInvoice = value;
					this.SendPropertyChanged("PrintSerialNumberOnInvoice");
					this.OnPrintSerialNumberOnInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckLotMinimumShelfLife", DbType="Bit NOT NULL")]
		public bool CheckLotMinimumShelfLife
		{
			get
			{
				return this._CheckLotMinimumShelfLife;
			}
			set
			{
				if ((this._CheckLotMinimumShelfLife != value))
				{
					this.OnCheckLotMinimumShelfLifeChanging(value);
					this.SendPropertyChanging();
					this._CheckLotMinimumShelfLife = value;
					this.SendPropertyChanged("CheckLotMinimumShelfLife");
					this.OnCheckLotMinimumShelfLifeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumDaysToSellLot", DbType="SmallInt NOT NULL")]
		public short MinimumDaysToSellLot
		{
			get
			{
				return this._MinimumDaysToSellLot;
			}
			set
			{
				if ((this._MinimumDaysToSellLot != value))
				{
					this.OnMinimumDaysToSellLotChanging(value);
					this.SendPropertyChanging();
					this._MinimumDaysToSellLot = value;
					this.SendPropertyChanged("MinimumDaysToSellLot");
					this.OnMinimumDaysToSellLotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumDaysToUseLot", DbType="SmallInt NOT NULL")]
		public short MinimumDaysToUseLot
		{
			get
			{
				return this._MinimumDaysToUseLot;
			}
			set
			{
				if ((this._MinimumDaysToUseLot != value))
				{
					this.OnMinimumDaysToUseLotChanging(value);
					this.SendPropertyChanging();
					this._MinimumDaysToUseLot = value;
					this.SendPropertyChanged("MinimumDaysToUseLot");
					this.OnMinimumDaysToUseLotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowDiscard", DbType="Bit NOT NULL")]
		public bool AllowDiscard
		{
			get
			{
				return this._AllowDiscard;
			}
			set
			{
				if ((this._AllowDiscard != value))
				{
					this.OnAllowDiscardChanging(value);
					this.SendPropertyChanging();
					this._AllowDiscard = value;
					this.SendPropertyChanged("AllowDiscard");
					this.OnAllowDiscardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowRepair", DbType="Bit NOT NULL")]
		public bool AllowRepair
		{
			get
			{
				return this._AllowRepair;
			}
			set
			{
				if ((this._AllowRepair != value))
				{
					this.OnAllowRepairChanging(value);
					this.SendPropertyChanging();
					this._AllowRepair = value;
					this.SendPropertyChanged("AllowRepair");
					this.OnAllowRepairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTaxable1", DbType="Bit NOT NULL")]
		public bool IsTaxable1
		{
			get
			{
				return this._IsTaxable1;
			}
			set
			{
				if ((this._IsTaxable1 != value))
				{
					this.OnIsTaxable1Changing(value);
					this.SendPropertyChanging();
					this._IsTaxable1 = value;
					this.SendPropertyChanged("IsTaxable1");
					this.OnIsTaxable1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTaxable2", DbType="Bit NOT NULL")]
		public bool IsTaxable2
		{
			get
			{
				return this._IsTaxable2;
			}
			set
			{
				if ((this._IsTaxable2 != value))
				{
					this.OnIsTaxable2Changing(value);
					this.SendPropertyChanging();
					this._IsTaxable2 = value;
					this.SendPropertyChanged("IsTaxable2");
					this.OnIsTaxable2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTaxCodeID", DbType="Int")]
		public System.Nullable<int> SalesTaxCodeID
		{
			get
			{
				return this._SalesTaxCodeID;
			}
			set
			{
				if ((this._SalesTaxCodeID != value))
				{
					this.OnSalesTaxCodeIDChanging(value);
					this.SendPropertyChanging();
					this._SalesTaxCodeID = value;
					this.SendPropertyChanged("SalesTaxCodeID");
					this.OnSalesTaxCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmortizeRevenue", DbType="Bit NOT NULL")]
		public bool AmortizeRevenue
		{
			get
			{
				return this._AmortizeRevenue;
			}
			set
			{
				if ((this._AmortizeRevenue != value))
				{
					this.OnAmortizeRevenueChanging(value);
					this.SendPropertyChanging();
					this._AmortizeRevenue = value;
					this.SendPropertyChanged("AmortizeRevenue");
					this.OnAmortizeRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmortizationMethod", DbType="TinyInt NOT NULL")]
		public byte AmortizationMethod
		{
			get
			{
				return this._AmortizationMethod;
			}
			set
			{
				if ((this._AmortizationMethod != value))
				{
					this.OnAmortizationMethodChanging(value);
					this.SendPropertyChanging();
					this._AmortizationMethod = value;
					this.SendPropertyChanged("AmortizationMethod");
					this.OnAmortizationMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmortizationFrequency", DbType="TinyInt NOT NULL")]
		public byte AmortizationFrequency
		{
			get
			{
				return this._AmortizationFrequency;
			}
			set
			{
				if ((this._AmortizationFrequency != value))
				{
					this.OnAmortizationFrequencyChanging(value);
					this.SendPropertyChanging();
					this._AmortizationFrequency = value;
					this.SendPropertyChanged("AmortizationFrequency");
					this.OnAmortizationFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmortizationCycles", DbType="SmallInt NOT NULL")]
		public short AmortizationCycles
		{
			get
			{
				return this._AmortizationCycles;
			}
			set
			{
				if ((this._AmortizationCycles != value))
				{
					this.OnAmortizationCyclesChanging(value);
					this.SendPropertyChanging();
					this._AmortizationCycles = value;
					this.SendPropertyChanged("AmortizationCycles");
					this.OnAmortizationCyclesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOverwriteRTVRemark", DbType="Bit NOT NULL")]
		public bool AllowOverwriteRTVRemark
		{
			get
			{
				return this._AllowOverwriteRTVRemark;
			}
			set
			{
				if ((this._AllowOverwriteRTVRemark != value))
				{
					this.OnAllowOverwriteRTVRemarkChanging(value);
					this.SendPropertyChanging();
					this._AllowOverwriteRTVRemark = value;
					this.SendPropertyChanged("AllowOverwriteRTVRemark");
					this.OnAllowOverwriteRTVRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintRemarkOnRTV", DbType="Bit NOT NULL")]
		public bool PrintRemarkOnRTV
		{
			get
			{
				return this._PrintRemarkOnRTV;
			}
			set
			{
				if ((this._PrintRemarkOnRTV != value))
				{
					this.OnPrintRemarkOnRTVChanging(value);
					this.SendPropertyChanging();
					this._PrintRemarkOnRTV = value;
					this.SendPropertyChanged("PrintRemarkOnRTV");
					this.OnPrintRemarkOnRTVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintRemarkOnRTVPickList", DbType="Bit NOT NULL")]
		public bool PrintRemarkOnRTVPickList
		{
			get
			{
				return this._PrintRemarkOnRTVPickList;
			}
			set
			{
				if ((this._PrintRemarkOnRTVPickList != value))
				{
					this.OnPrintRemarkOnRTVPickListChanging(value);
					this.SendPropertyChanging();
					this._PrintRemarkOnRTVPickList = value;
					this.SendPropertyChanged("PrintRemarkOnRTVPickList");
					this.OnPrintRemarkOnRTVPickListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_InventoryPrice", Storage="_InventoryPrices", ThisKey="ID", OtherKey="InventoryID")]
		public EntitySet<InventoryPrice> InventoryPrices
		{
			get
			{
				return this._InventoryPrices;
			}
			set
			{
				this._InventoryPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_InventoryWarehouse", Storage="_InventoryWarehouses", ThisKey="ID", OtherKey="InventoryID")]
		public EntitySet<InventoryWarehouse> InventoryWarehouses
		{
			get
			{
				return this._InventoryWarehouses;
			}
			set
			{
				this._InventoryWarehouses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasure_Inventory", Storage="_UnitOfMeasure", ThisKey="PurchaseUOMID", OtherKey="ID", IsForeignKey=true)]
		public UnitOfMeasure UnitOfMeasure
		{
			get
			{
				return this._UnitOfMeasure.Entity;
			}
			set
			{
				UnitOfMeasure previousValue = this._UnitOfMeasure.Entity;
				if (((previousValue != value) 
							|| (this._UnitOfMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitOfMeasure.Entity = null;
						previousValue.Inventories.Remove(this);
					}
					this._UnitOfMeasure.Entity = value;
					if ((value != null))
					{
						value.Inventories.Add(this);
						this._PurchaseUOMID = value.ID;
					}
					else
					{
						this._PurchaseUOMID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UnitOfMeasure");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasure_Inventory1", Storage="_UnitOfMeasure1", ThisKey="SaleUOMID", OtherKey="ID", IsForeignKey=true)]
		public UnitOfMeasure UnitOfMeasure1
		{
			get
			{
				return this._UnitOfMeasure1.Entity;
			}
			set
			{
				UnitOfMeasure previousValue = this._UnitOfMeasure1.Entity;
				if (((previousValue != value) 
							|| (this._UnitOfMeasure1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitOfMeasure1.Entity = null;
						previousValue.Inventories1.Remove(this);
					}
					this._UnitOfMeasure1.Entity = value;
					if ((value != null))
					{
						value.Inventories1.Add(this);
						this._SaleUOMID = value.ID;
					}
					else
					{
						this._SaleUOMID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UnitOfMeasure1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasure_Inventory2", Storage="_UnitOfMeasure2", ThisKey="StockUOMID", OtherKey="ID", IsForeignKey=true)]
		public UnitOfMeasure UnitOfMeasure2
		{
			get
			{
				return this._UnitOfMeasure2.Entity;
			}
			set
			{
				UnitOfMeasure previousValue = this._UnitOfMeasure2.Entity;
				if (((previousValue != value) 
							|| (this._UnitOfMeasure2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitOfMeasure2.Entity = null;
						previousValue.Inventories2.Remove(this);
					}
					this._UnitOfMeasure2.Entity = value;
					if ((value != null))
					{
						value.Inventories2.Add(this);
						this._StockUOMID = value.ID;
					}
					else
					{
						this._StockUOMID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UnitOfMeasure2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasure_Inventory3", Storage="_UnitOfMeasure3", ThisKey="StorageUOMID", OtherKey="ID", IsForeignKey=true)]
		public UnitOfMeasure UnitOfMeasure3
		{
			get
			{
				return this._UnitOfMeasure3.Entity;
			}
			set
			{
				UnitOfMeasure previousValue = this._UnitOfMeasure3.Entity;
				if (((previousValue != value) 
							|| (this._UnitOfMeasure3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitOfMeasure3.Entity = null;
						previousValue.Inventories3.Remove(this);
					}
					this._UnitOfMeasure3.Entity = value;
					if ((value != null))
					{
						value.Inventories3.Add(this);
						this._StorageUOMID = value.ID;
					}
					else
					{
						this._StorageUOMID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UnitOfMeasure3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InventoryPrices(InventoryPrice entity)
		{
			this.SendPropertyChanging();
			entity.Inventory = this;
		}
		
		private void detach_InventoryPrices(InventoryPrice entity)
		{
			this.SendPropertyChanging();
			entity.Inventory = null;
		}
		
		private void attach_InventoryWarehouses(InventoryWarehouse entity)
		{
			this.SendPropertyChanging();
			entity.Inventory = this;
		}
		
		private void detach_InventoryWarehouses(InventoryWarehouse entity)
		{
			this.SendPropertyChanging();
			entity.Inventory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryPrice")]
	public partial class InventoryPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _InventoryID;
		
		private System.Nullable<int> _InventorySpecID;
		
		private int _UOMID;
		
		private int _CurrencyID;
		
		private byte _PriceDecimalPlaces;
		
		private decimal _MinimumPrice;
		
		private System.Nullable<int> _CustomerPriceGroupID;
		
		private System.Nullable<byte> _PriceType;
		
		private System.DateTime _DateCreated;
		
		private string _CreatedBy;
		
		private System.DateTime _DateModified;
		
		private string _ModifiedBy;
		
		private EntitySet<InventoryListPrice> _InventoryListPrices;
		
		private EntitySet<InventoryTierPrice> _InventoryTierPrices;
		
		private EntitySet<InventorySpecialPrice> _InventorySpecialPrices;
		
		private EntityRef<Inventory> _Inventory;
		
		private EntityRef<UnitOfMeasure> _UnitOfMeasure;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInventoryIDChanging(int value);
    partial void OnInventoryIDChanged();
    partial void OnInventorySpecIDChanging(System.Nullable<int> value);
    partial void OnInventorySpecIDChanged();
    partial void OnUOMIDChanging(int value);
    partial void OnUOMIDChanged();
    partial void OnCurrencyIDChanging(int value);
    partial void OnCurrencyIDChanged();
    partial void OnPriceDecimalPlacesChanging(byte value);
    partial void OnPriceDecimalPlacesChanged();
    partial void OnMinimumPriceChanging(decimal value);
    partial void OnMinimumPriceChanged();
    partial void OnCustomerPriceGroupIDChanging(System.Nullable<int> value);
    partial void OnCustomerPriceGroupIDChanged();
    partial void OnPriceTypeChanging(System.Nullable<byte> value);
    partial void OnPriceTypeChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    #endregion
		
		public InventoryPrice()
		{
			this._InventoryListPrices = new EntitySet<InventoryListPrice>(new Action<InventoryListPrice>(this.attach_InventoryListPrices), new Action<InventoryListPrice>(this.detach_InventoryListPrices));
			this._InventoryTierPrices = new EntitySet<InventoryTierPrice>(new Action<InventoryTierPrice>(this.attach_InventoryTierPrices), new Action<InventoryTierPrice>(this.detach_InventoryTierPrices));
			this._InventorySpecialPrices = new EntitySet<InventorySpecialPrice>(new Action<InventorySpecialPrice>(this.attach_InventorySpecialPrices), new Action<InventorySpecialPrice>(this.detach_InventorySpecialPrices));
			this._Inventory = default(EntityRef<Inventory>);
			this._UnitOfMeasure = default(EntityRef<UnitOfMeasure>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", DbType="Int NOT NULL")]
		public int InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					if (this._Inventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryID");
					this.OnInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventorySpecID", DbType="Int")]
		public System.Nullable<int> InventorySpecID
		{
			get
			{
				return this._InventorySpecID;
			}
			set
			{
				if ((this._InventorySpecID != value))
				{
					this.OnInventorySpecIDChanging(value);
					this.SendPropertyChanging();
					this._InventorySpecID = value;
					this.SendPropertyChanged("InventorySpecID");
					this.OnInventorySpecIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOMID", DbType="Int NOT NULL")]
		public int UOMID
		{
			get
			{
				return this._UOMID;
			}
			set
			{
				if ((this._UOMID != value))
				{
					if (this._UnitOfMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUOMIDChanging(value);
					this.SendPropertyChanging();
					this._UOMID = value;
					this.SendPropertyChanged("UOMID");
					this.OnUOMIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int NOT NULL")]
		public int CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDecimalPlaces", DbType="TinyInt NOT NULL")]
		public byte PriceDecimalPlaces
		{
			get
			{
				return this._PriceDecimalPlaces;
			}
			set
			{
				if ((this._PriceDecimalPlaces != value))
				{
					this.OnPriceDecimalPlacesChanging(value);
					this.SendPropertyChanging();
					this._PriceDecimalPlaces = value;
					this.SendPropertyChanged("PriceDecimalPlaces");
					this.OnPriceDecimalPlacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumPrice", DbType="Decimal(20,6) NOT NULL")]
		public decimal MinimumPrice
		{
			get
			{
				return this._MinimumPrice;
			}
			set
			{
				if ((this._MinimumPrice != value))
				{
					this.OnMinimumPriceChanging(value);
					this.SendPropertyChanging();
					this._MinimumPrice = value;
					this.SendPropertyChanged("MinimumPrice");
					this.OnMinimumPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPriceGroupID", DbType="Int")]
		public System.Nullable<int> CustomerPriceGroupID
		{
			get
			{
				return this._CustomerPriceGroupID;
			}
			set
			{
				if ((this._CustomerPriceGroupID != value))
				{
					this.OnCustomerPriceGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerPriceGroupID = value;
					this.SendPropertyChanged("CustomerPriceGroupID");
					this.OnCustomerPriceGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceType", DbType="TinyInt")]
		public System.Nullable<byte> PriceType
		{
			get
			{
				return this._PriceType;
			}
			set
			{
				if ((this._PriceType != value))
				{
					this.OnPriceTypeChanging(value);
					this.SendPropertyChanging();
					this._PriceType = value;
					this.SendPropertyChanged("PriceType");
					this.OnPriceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventoryPrice_InventoryListPrice", Storage="_InventoryListPrices", ThisKey="ID", OtherKey="InventoryPriceID")]
		public EntitySet<InventoryListPrice> InventoryListPrices
		{
			get
			{
				return this._InventoryListPrices;
			}
			set
			{
				this._InventoryListPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventoryPrice_InventoryTierPrice", Storage="_InventoryTierPrices", ThisKey="ID", OtherKey="InventoryPriceID")]
		public EntitySet<InventoryTierPrice> InventoryTierPrices
		{
			get
			{
				return this._InventoryTierPrices;
			}
			set
			{
				this._InventoryTierPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventoryPrice_InventorySpecialPrice", Storage="_InventorySpecialPrices", ThisKey="ID", OtherKey="InventoryPriceID")]
		public EntitySet<InventorySpecialPrice> InventorySpecialPrices
		{
			get
			{
				return this._InventorySpecialPrices;
			}
			set
			{
				this._InventorySpecialPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_InventoryPrice", Storage="_Inventory", ThisKey="InventoryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Inventory Inventory
		{
			get
			{
				return this._Inventory.Entity;
			}
			set
			{
				Inventory previousValue = this._Inventory.Entity;
				if (((previousValue != value) 
							|| (this._Inventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inventory.Entity = null;
						previousValue.InventoryPrices.Remove(this);
					}
					this._Inventory.Entity = value;
					if ((value != null))
					{
						value.InventoryPrices.Add(this);
						this._InventoryID = value.ID;
					}
					else
					{
						this._InventoryID = default(int);
					}
					this.SendPropertyChanged("Inventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasure_InventoryPrice", Storage="_UnitOfMeasure", ThisKey="UOMID", OtherKey="ID", IsForeignKey=true)]
		public UnitOfMeasure UnitOfMeasure
		{
			get
			{
				return this._UnitOfMeasure.Entity;
			}
			set
			{
				UnitOfMeasure previousValue = this._UnitOfMeasure.Entity;
				if (((previousValue != value) 
							|| (this._UnitOfMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitOfMeasure.Entity = null;
						previousValue.InventoryPrices.Remove(this);
					}
					this._UnitOfMeasure.Entity = value;
					if ((value != null))
					{
						value.InventoryPrices.Add(this);
						this._UOMID = value.ID;
					}
					else
					{
						this._UOMID = default(int);
					}
					this.SendPropertyChanged("UnitOfMeasure");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InventoryListPrices(InventoryListPrice entity)
		{
			this.SendPropertyChanging();
			entity.InventoryPrice = this;
		}
		
		private void detach_InventoryListPrices(InventoryListPrice entity)
		{
			this.SendPropertyChanging();
			entity.InventoryPrice = null;
		}
		
		private void attach_InventoryTierPrices(InventoryTierPrice entity)
		{
			this.SendPropertyChanging();
			entity.InventoryPrice = this;
		}
		
		private void detach_InventoryTierPrices(InventoryTierPrice entity)
		{
			this.SendPropertyChanging();
			entity.InventoryPrice = null;
		}
		
		private void attach_InventorySpecialPrices(InventorySpecialPrice entity)
		{
			this.SendPropertyChanging();
			entity.InventoryPrice = this;
		}
		
		private void detach_InventorySpecialPrices(InventorySpecialPrice entity)
		{
			this.SendPropertyChanging();
			entity.InventoryPrice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryListPrice")]
	public partial class InventoryListPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _InventoryPriceID;
		
		private decimal _ListPrice;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _DateCreated;
		
		private string _CreatedBy;
		
		private System.DateTime _DateModified;
		
		private string _ModifiedBy;
		
		private EntityRef<InventoryPrice> _InventoryPrice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInventoryPriceIDChanging(int value);
    partial void OnInventoryPriceIDChanged();
    partial void OnListPriceChanging(decimal value);
    partial void OnListPriceChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    #endregion
		
		public InventoryListPrice()
		{
			this._InventoryPrice = default(EntityRef<InventoryPrice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryPriceID", DbType="Int NOT NULL")]
		public int InventoryPriceID
		{
			get
			{
				return this._InventoryPriceID;
			}
			set
			{
				if ((this._InventoryPriceID != value))
				{
					if (this._InventoryPrice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInventoryPriceIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryPriceID = value;
					this.SendPropertyChanged("InventoryPriceID");
					this.OnInventoryPriceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListPrice", DbType="Decimal(20,6) NOT NULL")]
		public decimal ListPrice
		{
			get
			{
				return this._ListPrice;
			}
			set
			{
				if ((this._ListPrice != value))
				{
					this.OnListPriceChanging(value);
					this.SendPropertyChanging();
					this._ListPrice = value;
					this.SendPropertyChanged("ListPrice");
					this.OnListPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventoryPrice_InventoryListPrice", Storage="_InventoryPrice", ThisKey="InventoryPriceID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InventoryPrice InventoryPrice
		{
			get
			{
				return this._InventoryPrice.Entity;
			}
			set
			{
				InventoryPrice previousValue = this._InventoryPrice.Entity;
				if (((previousValue != value) 
							|| (this._InventoryPrice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InventoryPrice.Entity = null;
						previousValue.InventoryListPrices.Remove(this);
					}
					this._InventoryPrice.Entity = value;
					if ((value != null))
					{
						value.InventoryListPrices.Add(this);
						this._InventoryPriceID = value.ID;
					}
					else
					{
						this._InventoryPriceID = default(int);
					}
					this.SendPropertyChanged("InventoryPrice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryWarehouse")]
	public partial class InventoryWarehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _InventoryID;
		
		private int _WarehouseID;
		
		private System.Nullable<int> _InventorySpecID;
		
		private int _Sequence;
		
		private decimal _OnhandQty;
		
		private decimal _AverageCost;
		
		private short _Status;
		
		private decimal _SafetyStockQty;
		
		private decimal _ReorderPoint;
		
		private decimal _ReorderQty;
		
		private int _ManufacturingLeadDays;
		
		private System.Nullable<int> _RevenueCodeID;
		
		private System.Nullable<int> _InventoryAccountID;
		
		private System.Nullable<int> _InTransitInventoryAccountID;
		
		private System.Nullable<int> _InterimInventoryAccountID;
		
		private System.Nullable<int> _InventoryVarianceAccountID;
		
		private System.Nullable<int> _CostVarianceAccountID;
		
		private System.Nullable<int> _ContractCostAccountID;
		
		private System.Nullable<int> _ContractObligationAccountID;
		
		private System.Nullable<int> _ContractDiscountAccountID;
		
		private System.Nullable<decimal> _CurrentCost;
		
		private System.Nullable<decimal> _StandardCost;
		
		private System.Nullable<decimal> _ReturnCost;
		
		private System.DateTime _DateCreated;
		
		private string _CreatedBy;
		
		private System.DateTime _DateModified;
		
		private string _ModifiedBy;
		
		private EntityRef<Inventory> _Inventory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInventoryIDChanging(int value);
    partial void OnInventoryIDChanged();
    partial void OnWarehouseIDChanging(int value);
    partial void OnWarehouseIDChanged();
    partial void OnInventorySpecIDChanging(System.Nullable<int> value);
    partial void OnInventorySpecIDChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    partial void OnOnhandQtyChanging(decimal value);
    partial void OnOnhandQtyChanged();
    partial void OnAverageCostChanging(decimal value);
    partial void OnAverageCostChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnSafetyStockQtyChanging(decimal value);
    partial void OnSafetyStockQtyChanged();
    partial void OnReorderPointChanging(decimal value);
    partial void OnReorderPointChanged();
    partial void OnReorderQtyChanging(decimal value);
    partial void OnReorderQtyChanged();
    partial void OnManufacturingLeadDaysChanging(int value);
    partial void OnManufacturingLeadDaysChanged();
    partial void OnRevenueCodeIDChanging(System.Nullable<int> value);
    partial void OnRevenueCodeIDChanged();
    partial void OnInventoryAccountIDChanging(System.Nullable<int> value);
    partial void OnInventoryAccountIDChanged();
    partial void OnInTransitInventoryAccountIDChanging(System.Nullable<int> value);
    partial void OnInTransitInventoryAccountIDChanged();
    partial void OnInterimInventoryAccountIDChanging(System.Nullable<int> value);
    partial void OnInterimInventoryAccountIDChanged();
    partial void OnInventoryVarianceAccountIDChanging(System.Nullable<int> value);
    partial void OnInventoryVarianceAccountIDChanged();
    partial void OnCostVarianceAccountIDChanging(System.Nullable<int> value);
    partial void OnCostVarianceAccountIDChanged();
    partial void OnContractCostAccountIDChanging(System.Nullable<int> value);
    partial void OnContractCostAccountIDChanged();
    partial void OnContractObligationAccountIDChanging(System.Nullable<int> value);
    partial void OnContractObligationAccountIDChanged();
    partial void OnContractDiscountAccountIDChanging(System.Nullable<int> value);
    partial void OnContractDiscountAccountIDChanged();
    partial void OnCurrentCostChanging(System.Nullable<decimal> value);
    partial void OnCurrentCostChanged();
    partial void OnStandardCostChanging(System.Nullable<decimal> value);
    partial void OnStandardCostChanged();
    partial void OnReturnCostChanging(System.Nullable<decimal> value);
    partial void OnReturnCostChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    #endregion
		
		public InventoryWarehouse()
		{
			this._Inventory = default(EntityRef<Inventory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", DbType="Int NOT NULL")]
		public int InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					if (this._Inventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryID");
					this.OnInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseID", DbType="Int NOT NULL")]
		public int WarehouseID
		{
			get
			{
				return this._WarehouseID;
			}
			set
			{
				if ((this._WarehouseID != value))
				{
					this.OnWarehouseIDChanging(value);
					this.SendPropertyChanging();
					this._WarehouseID = value;
					this.SendPropertyChanged("WarehouseID");
					this.OnWarehouseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventorySpecID", DbType="Int")]
		public System.Nullable<int> InventorySpecID
		{
			get
			{
				return this._InventorySpecID;
			}
			set
			{
				if ((this._InventorySpecID != value))
				{
					this.OnInventorySpecIDChanging(value);
					this.SendPropertyChanging();
					this._InventorySpecID = value;
					this.SendPropertyChanged("InventorySpecID");
					this.OnInventorySpecIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int NOT NULL")]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnhandQty", DbType="Decimal(20,6) NOT NULL")]
		public decimal OnhandQty
		{
			get
			{
				return this._OnhandQty;
			}
			set
			{
				if ((this._OnhandQty != value))
				{
					this.OnOnhandQtyChanging(value);
					this.SendPropertyChanging();
					this._OnhandQty = value;
					this.SendPropertyChanged("OnhandQty");
					this.OnOnhandQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageCost", DbType="Decimal(20,6) NOT NULL")]
		public decimal AverageCost
		{
			get
			{
				return this._AverageCost;
			}
			set
			{
				if ((this._AverageCost != value))
				{
					this.OnAverageCostChanging(value);
					this.SendPropertyChanging();
					this._AverageCost = value;
					this.SendPropertyChanged("AverageCost");
					this.OnAverageCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyStockQty", DbType="Decimal(20,6) NOT NULL")]
		public decimal SafetyStockQty
		{
			get
			{
				return this._SafetyStockQty;
			}
			set
			{
				if ((this._SafetyStockQty != value))
				{
					this.OnSafetyStockQtyChanging(value);
					this.SendPropertyChanging();
					this._SafetyStockQty = value;
					this.SendPropertyChanged("SafetyStockQty");
					this.OnSafetyStockQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderPoint", DbType="Decimal(20,6) NOT NULL")]
		public decimal ReorderPoint
		{
			get
			{
				return this._ReorderPoint;
			}
			set
			{
				if ((this._ReorderPoint != value))
				{
					this.OnReorderPointChanging(value);
					this.SendPropertyChanging();
					this._ReorderPoint = value;
					this.SendPropertyChanged("ReorderPoint");
					this.OnReorderPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderQty", DbType="Decimal(20,6) NOT NULL")]
		public decimal ReorderQty
		{
			get
			{
				return this._ReorderQty;
			}
			set
			{
				if ((this._ReorderQty != value))
				{
					this.OnReorderQtyChanging(value);
					this.SendPropertyChanging();
					this._ReorderQty = value;
					this.SendPropertyChanged("ReorderQty");
					this.OnReorderQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturingLeadDays", DbType="Int NOT NULL")]
		public int ManufacturingLeadDays
		{
			get
			{
				return this._ManufacturingLeadDays;
			}
			set
			{
				if ((this._ManufacturingLeadDays != value))
				{
					this.OnManufacturingLeadDaysChanging(value);
					this.SendPropertyChanging();
					this._ManufacturingLeadDays = value;
					this.SendPropertyChanged("ManufacturingLeadDays");
					this.OnManufacturingLeadDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenueCodeID", DbType="Int")]
		public System.Nullable<int> RevenueCodeID
		{
			get
			{
				return this._RevenueCodeID;
			}
			set
			{
				if ((this._RevenueCodeID != value))
				{
					this.OnRevenueCodeIDChanging(value);
					this.SendPropertyChanging();
					this._RevenueCodeID = value;
					this.SendPropertyChanged("RevenueCodeID");
					this.OnRevenueCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryAccountID", DbType="Int")]
		public System.Nullable<int> InventoryAccountID
		{
			get
			{
				return this._InventoryAccountID;
			}
			set
			{
				if ((this._InventoryAccountID != value))
				{
					this.OnInventoryAccountIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryAccountID = value;
					this.SendPropertyChanged("InventoryAccountID");
					this.OnInventoryAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InTransitInventoryAccountID", DbType="Int")]
		public System.Nullable<int> InTransitInventoryAccountID
		{
			get
			{
				return this._InTransitInventoryAccountID;
			}
			set
			{
				if ((this._InTransitInventoryAccountID != value))
				{
					this.OnInTransitInventoryAccountIDChanging(value);
					this.SendPropertyChanging();
					this._InTransitInventoryAccountID = value;
					this.SendPropertyChanged("InTransitInventoryAccountID");
					this.OnInTransitInventoryAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterimInventoryAccountID", DbType="Int")]
		public System.Nullable<int> InterimInventoryAccountID
		{
			get
			{
				return this._InterimInventoryAccountID;
			}
			set
			{
				if ((this._InterimInventoryAccountID != value))
				{
					this.OnInterimInventoryAccountIDChanging(value);
					this.SendPropertyChanging();
					this._InterimInventoryAccountID = value;
					this.SendPropertyChanged("InterimInventoryAccountID");
					this.OnInterimInventoryAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryVarianceAccountID", DbType="Int")]
		public System.Nullable<int> InventoryVarianceAccountID
		{
			get
			{
				return this._InventoryVarianceAccountID;
			}
			set
			{
				if ((this._InventoryVarianceAccountID != value))
				{
					this.OnInventoryVarianceAccountIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryVarianceAccountID = value;
					this.SendPropertyChanged("InventoryVarianceAccountID");
					this.OnInventoryVarianceAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostVarianceAccountID", DbType="Int")]
		public System.Nullable<int> CostVarianceAccountID
		{
			get
			{
				return this._CostVarianceAccountID;
			}
			set
			{
				if ((this._CostVarianceAccountID != value))
				{
					this.OnCostVarianceAccountIDChanging(value);
					this.SendPropertyChanging();
					this._CostVarianceAccountID = value;
					this.SendPropertyChanged("CostVarianceAccountID");
					this.OnCostVarianceAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractCostAccountID", DbType="Int")]
		public System.Nullable<int> ContractCostAccountID
		{
			get
			{
				return this._ContractCostAccountID;
			}
			set
			{
				if ((this._ContractCostAccountID != value))
				{
					this.OnContractCostAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ContractCostAccountID = value;
					this.SendPropertyChanged("ContractCostAccountID");
					this.OnContractCostAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractObligationAccountID", DbType="Int")]
		public System.Nullable<int> ContractObligationAccountID
		{
			get
			{
				return this._ContractObligationAccountID;
			}
			set
			{
				if ((this._ContractObligationAccountID != value))
				{
					this.OnContractObligationAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ContractObligationAccountID = value;
					this.SendPropertyChanged("ContractObligationAccountID");
					this.OnContractObligationAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractDiscountAccountID", DbType="Int")]
		public System.Nullable<int> ContractDiscountAccountID
		{
			get
			{
				return this._ContractDiscountAccountID;
			}
			set
			{
				if ((this._ContractDiscountAccountID != value))
				{
					this.OnContractDiscountAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ContractDiscountAccountID = value;
					this.SendPropertyChanged("ContractDiscountAccountID");
					this.OnContractDiscountAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCost", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> CurrentCost
		{
			get
			{
				return this._CurrentCost;
			}
			set
			{
				if ((this._CurrentCost != value))
				{
					this.OnCurrentCostChanging(value);
					this.SendPropertyChanging();
					this._CurrentCost = value;
					this.SendPropertyChanged("CurrentCost");
					this.OnCurrentCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardCost", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> StandardCost
		{
			get
			{
				return this._StandardCost;
			}
			set
			{
				if ((this._StandardCost != value))
				{
					this.OnStandardCostChanging(value);
					this.SendPropertyChanging();
					this._StandardCost = value;
					this.SendPropertyChanged("StandardCost");
					this.OnStandardCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnCost", DbType="Decimal(20,6)")]
		public System.Nullable<decimal> ReturnCost
		{
			get
			{
				return this._ReturnCost;
			}
			set
			{
				if ((this._ReturnCost != value))
				{
					this.OnReturnCostChanging(value);
					this.SendPropertyChanging();
					this._ReturnCost = value;
					this.SendPropertyChanged("ReturnCost");
					this.OnReturnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inventory_InventoryWarehouse", Storage="_Inventory", ThisKey="InventoryID", OtherKey="ID", IsForeignKey=true)]
		public Inventory Inventory
		{
			get
			{
				return this._Inventory.Entity;
			}
			set
			{
				Inventory previousValue = this._Inventory.Entity;
				if (((previousValue != value) 
							|| (this._Inventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inventory.Entity = null;
						previousValue.InventoryWarehouses.Remove(this);
					}
					this._Inventory.Entity = value;
					if ((value != null))
					{
						value.InventoryWarehouses.Add(this);
						this._InventoryID = value.ID;
					}
					else
					{
						this._InventoryID = default(int);
					}
					this.SendPropertyChanged("Inventory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryTierPrice")]
	public partial class InventoryTierPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _InventoryPriceID;
		
		private decimal _QuantityBreak;
		
		private decimal _MarkupPercentage;
		
		private decimal _MarkupAmount;
		
		private decimal _UnitPrice;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _DateCreated;
		
		private string _CreatedBy;
		
		private System.DateTime _DateModified;
		
		private string _ModifiedBy;
		
		private EntityRef<InventoryPrice> _InventoryPrice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInventoryPriceIDChanging(int value);
    partial void OnInventoryPriceIDChanged();
    partial void OnQuantityBreakChanging(decimal value);
    partial void OnQuantityBreakChanged();
    partial void OnMarkupPercentageChanging(decimal value);
    partial void OnMarkupPercentageChanged();
    partial void OnMarkupAmountChanging(decimal value);
    partial void OnMarkupAmountChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    #endregion
		
		public InventoryTierPrice()
		{
			this._InventoryPrice = default(EntityRef<InventoryPrice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryPriceID", DbType="Int NOT NULL")]
		public int InventoryPriceID
		{
			get
			{
				return this._InventoryPriceID;
			}
			set
			{
				if ((this._InventoryPriceID != value))
				{
					if (this._InventoryPrice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInventoryPriceIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryPriceID = value;
					this.SendPropertyChanged("InventoryPriceID");
					this.OnInventoryPriceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityBreak", DbType="Decimal(20,6) NOT NULL")]
		public decimal QuantityBreak
		{
			get
			{
				return this._QuantityBreak;
			}
			set
			{
				if ((this._QuantityBreak != value))
				{
					this.OnQuantityBreakChanging(value);
					this.SendPropertyChanging();
					this._QuantityBreak = value;
					this.SendPropertyChanged("QuantityBreak");
					this.OnQuantityBreakChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkupPercentage", DbType="Decimal(7,4) NOT NULL")]
		public decimal MarkupPercentage
		{
			get
			{
				return this._MarkupPercentage;
			}
			set
			{
				if ((this._MarkupPercentage != value))
				{
					this.OnMarkupPercentageChanging(value);
					this.SendPropertyChanging();
					this._MarkupPercentage = value;
					this.SendPropertyChanged("MarkupPercentage");
					this.OnMarkupPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkupAmount", DbType="Decimal(20,6) NOT NULL")]
		public decimal MarkupAmount
		{
			get
			{
				return this._MarkupAmount;
			}
			set
			{
				if ((this._MarkupAmount != value))
				{
					this.OnMarkupAmountChanging(value);
					this.SendPropertyChanging();
					this._MarkupAmount = value;
					this.SendPropertyChanged("MarkupAmount");
					this.OnMarkupAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(20,6) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventoryPrice_InventoryTierPrice", Storage="_InventoryPrice", ThisKey="InventoryPriceID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InventoryPrice InventoryPrice
		{
			get
			{
				return this._InventoryPrice.Entity;
			}
			set
			{
				InventoryPrice previousValue = this._InventoryPrice.Entity;
				if (((previousValue != value) 
							|| (this._InventoryPrice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InventoryPrice.Entity = null;
						previousValue.InventoryTierPrices.Remove(this);
					}
					this._InventoryPrice.Entity = value;
					if ((value != null))
					{
						value.InventoryTierPrices.Add(this);
						this._InventoryPriceID = value.ID;
					}
					else
					{
						this._InventoryPriceID = default(int);
					}
					this.SendPropertyChanged("InventoryPrice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventorySpecialPrice")]
	public partial class InventorySpecialPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _InventoryPriceID;
		
		private decimal _SpecialPrice;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private System.DateTime _DateCreated;
		
		private string _CreatedBy;
		
		private System.DateTime _DateModified;
		
		private string _ModifiedBy;
		
		private EntityRef<InventoryPrice> _InventoryPrice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInventoryPriceIDChanging(int value);
    partial void OnInventoryPriceIDChanged();
    partial void OnSpecialPriceChanging(decimal value);
    partial void OnSpecialPriceChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    #endregion
		
		public InventorySpecialPrice()
		{
			this._InventoryPrice = default(EntityRef<InventoryPrice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryPriceID", DbType="Int NOT NULL")]
		public int InventoryPriceID
		{
			get
			{
				return this._InventoryPriceID;
			}
			set
			{
				if ((this._InventoryPriceID != value))
				{
					if (this._InventoryPrice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInventoryPriceIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryPriceID = value;
					this.SendPropertyChanged("InventoryPriceID");
					this.OnInventoryPriceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialPrice", DbType="Decimal(20,6) NOT NULL")]
		public decimal SpecialPrice
		{
			get
			{
				return this._SpecialPrice;
			}
			set
			{
				if ((this._SpecialPrice != value))
				{
					this.OnSpecialPriceChanging(value);
					this.SendPropertyChanging();
					this._SpecialPrice = value;
					this.SendPropertyChanged("SpecialPrice");
					this.OnSpecialPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InventoryPrice_InventorySpecialPrice", Storage="_InventoryPrice", ThisKey="InventoryPriceID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InventoryPrice InventoryPrice
		{
			get
			{
				return this._InventoryPrice.Entity;
			}
			set
			{
				InventoryPrice previousValue = this._InventoryPrice.Entity;
				if (((previousValue != value) 
							|| (this._InventoryPrice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InventoryPrice.Entity = null;
						previousValue.InventorySpecialPrices.Remove(this);
					}
					this._InventoryPrice.Entity = value;
					if ((value != null))
					{
						value.InventorySpecialPrices.Add(this);
						this._InventoryPriceID = value.ID;
					}
					else
					{
						this._InventoryPriceID = default(int);
					}
					this.SendPropertyChanged("InventoryPrice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CustomerCode;
		
		private int _EntityID;
		
		private string _ResaleNumber;
		
		private System.Nullable<int> _SalespersonID;
		
		private short _Status;
		
		private System.Nullable<int> _CustomerClassID;
		
		private System.Nullable<int> _CustomerIndustryID;
		
		private System.Nullable<int> _TerritoryID;
		
		private System.Nullable<int> _DefaultWarehouseID;
		
		private System.Nullable<int> _CommissionID;
		
		private System.Nullable<int> _PayCodeID;
		
		private string _Alias;
		
		private System.Nullable<int> _BillingAddressID;
		
		private System.Nullable<int> _ShippingAddressID;
		
		private System.Nullable<int> _SalesTaxCodeID;
		
		private System.Nullable<int> _RevenueCodeID;
		
		private string _TaxIdentification1;
		
		private string _TaxIdentification2;
		
		private string _SSN;
		
		private int _ARAccountID;
		
		private System.Nullable<int> _CustomerPriceGroupID;
		
		private bool _UseLastSOPrice;
		
		private System.Nullable<short> _ExpireLastPriceDays;
		
		private System.Nullable<int> _ShipViaID;
		
		private System.Nullable<int> _FOBID;
		
		private System.DateTime _YearToDateStartDate;
		
		private System.Nullable<System.DateTime> _LastYTDRecalcDate;
		
		private decimal _DiscountPercentage;
		
		private decimal _CreditLimit;
		
		private bool _AllowOverwriteRevenueCode;
		
		private System.Nullable<int> _ParentCustomerID;
		
		private bool _ShowNotepadFirstInTransaction;
		
		private bool _RequireCustomerPO;
		
		private bool _CheckForDuplicateCustomerPO;
		
		private bool _UseCustomerItemNumber;
		
		private bool _LimitItemSearchToCustomerItem;
		
		private bool _PrintItemNumber;
		
		private bool _GenerateInvoiceDuringShipment;
		
		private bool _ApplyFinanceCharge;
		
		private bool _PrintStatement;
		
		private byte _StatementType;
		
		private bool _ConsolidateStatement;
		
		private System.Nullable<int> _PrimaryContactID;
		
		private bool _SaveCreditCard;
		
		private System.Data.Linq.Binary _UserRestrictionBits;
		
		private bool _UseElectronicPayment;
		
		private string _OrderedBy;
		
		private System.DateTime _DateCreated;
		
		private string _CreatedBy;
		
		private System.DateTime _DateModified;
		
		private string _ModifiedBy;
		
		private EntitySet<Customer> _Customers;
		
		private EntityRef<Customer> _Customer1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnEntityIDChanging(int value);
    partial void OnEntityIDChanged();
    partial void OnResaleNumberChanging(string value);
    partial void OnResaleNumberChanged();
    partial void OnSalespersonIDChanging(System.Nullable<int> value);
    partial void OnSalespersonIDChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnCustomerClassIDChanging(System.Nullable<int> value);
    partial void OnCustomerClassIDChanged();
    partial void OnCustomerIndustryIDChanging(System.Nullable<int> value);
    partial void OnCustomerIndustryIDChanged();
    partial void OnTerritoryIDChanging(System.Nullable<int> value);
    partial void OnTerritoryIDChanged();
    partial void OnDefaultWarehouseIDChanging(System.Nullable<int> value);
    partial void OnDefaultWarehouseIDChanged();
    partial void OnCommissionIDChanging(System.Nullable<int> value);
    partial void OnCommissionIDChanged();
    partial void OnPayCodeIDChanging(System.Nullable<int> value);
    partial void OnPayCodeIDChanged();
    partial void OnAliasChanging(string value);
    partial void OnAliasChanged();
    partial void OnBillingAddressIDChanging(System.Nullable<int> value);
    partial void OnBillingAddressIDChanged();
    partial void OnShippingAddressIDChanging(System.Nullable<int> value);
    partial void OnShippingAddressIDChanged();
    partial void OnSalesTaxCodeIDChanging(System.Nullable<int> value);
    partial void OnSalesTaxCodeIDChanged();
    partial void OnRevenueCodeIDChanging(System.Nullable<int> value);
    partial void OnRevenueCodeIDChanged();
    partial void OnTaxIdentification1Changing(string value);
    partial void OnTaxIdentification1Changed();
    partial void OnTaxIdentification2Changing(string value);
    partial void OnTaxIdentification2Changed();
    partial void OnSSNChanging(string value);
    partial void OnSSNChanged();
    partial void OnARAccountIDChanging(int value);
    partial void OnARAccountIDChanged();
    partial void OnCustomerPriceGroupIDChanging(System.Nullable<int> value);
    partial void OnCustomerPriceGroupIDChanged();
    partial void OnUseLastSOPriceChanging(bool value);
    partial void OnUseLastSOPriceChanged();
    partial void OnExpireLastPriceDaysChanging(System.Nullable<short> value);
    partial void OnExpireLastPriceDaysChanged();
    partial void OnShipViaIDChanging(System.Nullable<int> value);
    partial void OnShipViaIDChanged();
    partial void OnFOBIDChanging(System.Nullable<int> value);
    partial void OnFOBIDChanged();
    partial void OnYearToDateStartDateChanging(System.DateTime value);
    partial void OnYearToDateStartDateChanged();
    partial void OnLastYTDRecalcDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastYTDRecalcDateChanged();
    partial void OnDiscountPercentageChanging(decimal value);
    partial void OnDiscountPercentageChanged();
    partial void OnCreditLimitChanging(decimal value);
    partial void OnCreditLimitChanged();
    partial void OnAllowOverwriteRevenueCodeChanging(bool value);
    partial void OnAllowOverwriteRevenueCodeChanged();
    partial void OnParentCustomerIDChanging(System.Nullable<int> value);
    partial void OnParentCustomerIDChanged();
    partial void OnShowNotepadFirstInTransactionChanging(bool value);
    partial void OnShowNotepadFirstInTransactionChanged();
    partial void OnRequireCustomerPOChanging(bool value);
    partial void OnRequireCustomerPOChanged();
    partial void OnCheckForDuplicateCustomerPOChanging(bool value);
    partial void OnCheckForDuplicateCustomerPOChanged();
    partial void OnUseCustomerItemNumberChanging(bool value);
    partial void OnUseCustomerItemNumberChanged();
    partial void OnLimitItemSearchToCustomerItemChanging(bool value);
    partial void OnLimitItemSearchToCustomerItemChanged();
    partial void OnPrintItemNumberChanging(bool value);
    partial void OnPrintItemNumberChanged();
    partial void OnGenerateInvoiceDuringShipmentChanging(bool value);
    partial void OnGenerateInvoiceDuringShipmentChanged();
    partial void OnApplyFinanceChargeChanging(bool value);
    partial void OnApplyFinanceChargeChanged();
    partial void OnPrintStatementChanging(bool value);
    partial void OnPrintStatementChanged();
    partial void OnStatementTypeChanging(byte value);
    partial void OnStatementTypeChanged();
    partial void OnConsolidateStatementChanging(bool value);
    partial void OnConsolidateStatementChanged();
    partial void OnPrimaryContactIDChanging(System.Nullable<int> value);
    partial void OnPrimaryContactIDChanged();
    partial void OnSaveCreditCardChanging(bool value);
    partial void OnSaveCreditCardChanged();
    partial void OnUserRestrictionBitsChanging(System.Data.Linq.Binary value);
    partial void OnUserRestrictionBitsChanged();
    partial void OnUseElectronicPaymentChanging(bool value);
    partial void OnUseElectronicPaymentChanged();
    partial void OnOrderedByChanging(string value);
    partial void OnOrderedByChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    #endregion
		
		public Customer()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Customer1 = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", DbType="Int NOT NULL")]
		public int EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					this.OnEntityIDChanging(value);
					this.SendPropertyChanging();
					this._EntityID = value;
					this.SendPropertyChanged("EntityID");
					this.OnEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResaleNumber", DbType="NVarChar(50)")]
		public string ResaleNumber
		{
			get
			{
				return this._ResaleNumber;
			}
			set
			{
				if ((this._ResaleNumber != value))
				{
					this.OnResaleNumberChanging(value);
					this.SendPropertyChanging();
					this._ResaleNumber = value;
					this.SendPropertyChanged("ResaleNumber");
					this.OnResaleNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalespersonID", DbType="Int")]
		public System.Nullable<int> SalespersonID
		{
			get
			{
				return this._SalespersonID;
			}
			set
			{
				if ((this._SalespersonID != value))
				{
					this.OnSalespersonIDChanging(value);
					this.SendPropertyChanging();
					this._SalespersonID = value;
					this.SendPropertyChanged("SalespersonID");
					this.OnSalespersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClassID", DbType="Int")]
		public System.Nullable<int> CustomerClassID
		{
			get
			{
				return this._CustomerClassID;
			}
			set
			{
				if ((this._CustomerClassID != value))
				{
					this.OnCustomerClassIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerClassID = value;
					this.SendPropertyChanged("CustomerClassID");
					this.OnCustomerClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerIndustryID", DbType="Int")]
		public System.Nullable<int> CustomerIndustryID
		{
			get
			{
				return this._CustomerIndustryID;
			}
			set
			{
				if ((this._CustomerIndustryID != value))
				{
					this.OnCustomerIndustryIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerIndustryID = value;
					this.SendPropertyChanged("CustomerIndustryID");
					this.OnCustomerIndustryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryID", DbType="Int")]
		public System.Nullable<int> TerritoryID
		{
			get
			{
				return this._TerritoryID;
			}
			set
			{
				if ((this._TerritoryID != value))
				{
					this.OnTerritoryIDChanging(value);
					this.SendPropertyChanging();
					this._TerritoryID = value;
					this.SendPropertyChanged("TerritoryID");
					this.OnTerritoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultWarehouseID", DbType="Int")]
		public System.Nullable<int> DefaultWarehouseID
		{
			get
			{
				return this._DefaultWarehouseID;
			}
			set
			{
				if ((this._DefaultWarehouseID != value))
				{
					this.OnDefaultWarehouseIDChanging(value);
					this.SendPropertyChanging();
					this._DefaultWarehouseID = value;
					this.SendPropertyChanged("DefaultWarehouseID");
					this.OnDefaultWarehouseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionID", DbType="Int")]
		public System.Nullable<int> CommissionID
		{
			get
			{
				return this._CommissionID;
			}
			set
			{
				if ((this._CommissionID != value))
				{
					this.OnCommissionIDChanging(value);
					this.SendPropertyChanging();
					this._CommissionID = value;
					this.SendPropertyChanged("CommissionID");
					this.OnCommissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayCodeID", DbType="Int")]
		public System.Nullable<int> PayCodeID
		{
			get
			{
				return this._PayCodeID;
			}
			set
			{
				if ((this._PayCodeID != value))
				{
					this.OnPayCodeIDChanging(value);
					this.SendPropertyChanging();
					this._PayCodeID = value;
					this.SendPropertyChanged("PayCodeID");
					this.OnPayCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alias", DbType="NVarChar(100)")]
		public string Alias
		{
			get
			{
				return this._Alias;
			}
			set
			{
				if ((this._Alias != value))
				{
					this.OnAliasChanging(value);
					this.SendPropertyChanging();
					this._Alias = value;
					this.SendPropertyChanged("Alias");
					this.OnAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAddressID", DbType="Int")]
		public System.Nullable<int> BillingAddressID
		{
			get
			{
				return this._BillingAddressID;
			}
			set
			{
				if ((this._BillingAddressID != value))
				{
					this.OnBillingAddressIDChanging(value);
					this.SendPropertyChanging();
					this._BillingAddressID = value;
					this.SendPropertyChanged("BillingAddressID");
					this.OnBillingAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddressID", DbType="Int")]
		public System.Nullable<int> ShippingAddressID
		{
			get
			{
				return this._ShippingAddressID;
			}
			set
			{
				if ((this._ShippingAddressID != value))
				{
					this.OnShippingAddressIDChanging(value);
					this.SendPropertyChanging();
					this._ShippingAddressID = value;
					this.SendPropertyChanged("ShippingAddressID");
					this.OnShippingAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTaxCodeID", DbType="Int")]
		public System.Nullable<int> SalesTaxCodeID
		{
			get
			{
				return this._SalesTaxCodeID;
			}
			set
			{
				if ((this._SalesTaxCodeID != value))
				{
					this.OnSalesTaxCodeIDChanging(value);
					this.SendPropertyChanging();
					this._SalesTaxCodeID = value;
					this.SendPropertyChanged("SalesTaxCodeID");
					this.OnSalesTaxCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenueCodeID", DbType="Int")]
		public System.Nullable<int> RevenueCodeID
		{
			get
			{
				return this._RevenueCodeID;
			}
			set
			{
				if ((this._RevenueCodeID != value))
				{
					this.OnRevenueCodeIDChanging(value);
					this.SendPropertyChanging();
					this._RevenueCodeID = value;
					this.SendPropertyChanged("RevenueCodeID");
					this.OnRevenueCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxIdentification1", DbType="NVarChar(50)")]
		public string TaxIdentification1
		{
			get
			{
				return this._TaxIdentification1;
			}
			set
			{
				if ((this._TaxIdentification1 != value))
				{
					this.OnTaxIdentification1Changing(value);
					this.SendPropertyChanging();
					this._TaxIdentification1 = value;
					this.SendPropertyChanged("TaxIdentification1");
					this.OnTaxIdentification1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxIdentification2", DbType="NVarChar(50)")]
		public string TaxIdentification2
		{
			get
			{
				return this._TaxIdentification2;
			}
			set
			{
				if ((this._TaxIdentification2 != value))
				{
					this.OnTaxIdentification2Changing(value);
					this.SendPropertyChanging();
					this._TaxIdentification2 = value;
					this.SendPropertyChanged("TaxIdentification2");
					this.OnTaxIdentification2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SSN
		{
			get
			{
				return this._SSN;
			}
			set
			{
				if ((this._SSN != value))
				{
					this.OnSSNChanging(value);
					this.SendPropertyChanging();
					this._SSN = value;
					this.SendPropertyChanged("SSN");
					this.OnSSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARAccountID", DbType="Int NOT NULL")]
		public int ARAccountID
		{
			get
			{
				return this._ARAccountID;
			}
			set
			{
				if ((this._ARAccountID != value))
				{
					this.OnARAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ARAccountID = value;
					this.SendPropertyChanged("ARAccountID");
					this.OnARAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPriceGroupID", DbType="Int")]
		public System.Nullable<int> CustomerPriceGroupID
		{
			get
			{
				return this._CustomerPriceGroupID;
			}
			set
			{
				if ((this._CustomerPriceGroupID != value))
				{
					this.OnCustomerPriceGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerPriceGroupID = value;
					this.SendPropertyChanged("CustomerPriceGroupID");
					this.OnCustomerPriceGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseLastSOPrice", DbType="Bit NOT NULL")]
		public bool UseLastSOPrice
		{
			get
			{
				return this._UseLastSOPrice;
			}
			set
			{
				if ((this._UseLastSOPrice != value))
				{
					this.OnUseLastSOPriceChanging(value);
					this.SendPropertyChanging();
					this._UseLastSOPrice = value;
					this.SendPropertyChanged("UseLastSOPrice");
					this.OnUseLastSOPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireLastPriceDays", DbType="SmallInt")]
		public System.Nullable<short> ExpireLastPriceDays
		{
			get
			{
				return this._ExpireLastPriceDays;
			}
			set
			{
				if ((this._ExpireLastPriceDays != value))
				{
					this.OnExpireLastPriceDaysChanging(value);
					this.SendPropertyChanging();
					this._ExpireLastPriceDays = value;
					this.SendPropertyChanged("ExpireLastPriceDays");
					this.OnExpireLastPriceDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipViaID", DbType="Int")]
		public System.Nullable<int> ShipViaID
		{
			get
			{
				return this._ShipViaID;
			}
			set
			{
				if ((this._ShipViaID != value))
				{
					this.OnShipViaIDChanging(value);
					this.SendPropertyChanging();
					this._ShipViaID = value;
					this.SendPropertyChanged("ShipViaID");
					this.OnShipViaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOBID", DbType="Int")]
		public System.Nullable<int> FOBID
		{
			get
			{
				return this._FOBID;
			}
			set
			{
				if ((this._FOBID != value))
				{
					this.OnFOBIDChanging(value);
					this.SendPropertyChanging();
					this._FOBID = value;
					this.SendPropertyChanged("FOBID");
					this.OnFOBIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearToDateStartDate", DbType="Date NOT NULL")]
		public System.DateTime YearToDateStartDate
		{
			get
			{
				return this._YearToDateStartDate;
			}
			set
			{
				if ((this._YearToDateStartDate != value))
				{
					this.OnYearToDateStartDateChanging(value);
					this.SendPropertyChanging();
					this._YearToDateStartDate = value;
					this.SendPropertyChanged("YearToDateStartDate");
					this.OnYearToDateStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastYTDRecalcDate", DbType="Date")]
		public System.Nullable<System.DateTime> LastYTDRecalcDate
		{
			get
			{
				return this._LastYTDRecalcDate;
			}
			set
			{
				if ((this._LastYTDRecalcDate != value))
				{
					this.OnLastYTDRecalcDateChanging(value);
					this.SendPropertyChanging();
					this._LastYTDRecalcDate = value;
					this.SendPropertyChanged("LastYTDRecalcDate");
					this.OnLastYTDRecalcDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercentage", DbType="Decimal(7,4) NOT NULL")]
		public decimal DiscountPercentage
		{
			get
			{
				return this._DiscountPercentage;
			}
			set
			{
				if ((this._DiscountPercentage != value))
				{
					this.OnDiscountPercentageChanging(value);
					this.SendPropertyChanging();
					this._DiscountPercentage = value;
					this.SendPropertyChanged("DiscountPercentage");
					this.OnDiscountPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditLimit", DbType="Decimal(20,4) NOT NULL")]
		public decimal CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this.OnCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._CreditLimit = value;
					this.SendPropertyChanged("CreditLimit");
					this.OnCreditLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowOverwriteRevenueCode", DbType="Bit NOT NULL")]
		public bool AllowOverwriteRevenueCode
		{
			get
			{
				return this._AllowOverwriteRevenueCode;
			}
			set
			{
				if ((this._AllowOverwriteRevenueCode != value))
				{
					this.OnAllowOverwriteRevenueCodeChanging(value);
					this.SendPropertyChanging();
					this._AllowOverwriteRevenueCode = value;
					this.SendPropertyChanged("AllowOverwriteRevenueCode");
					this.OnAllowOverwriteRevenueCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCustomerID", DbType="Int")]
		public System.Nullable<int> ParentCustomerID
		{
			get
			{
				return this._ParentCustomerID;
			}
			set
			{
				if ((this._ParentCustomerID != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._ParentCustomerID = value;
					this.SendPropertyChanged("ParentCustomerID");
					this.OnParentCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowNotepadFirstInTransaction", DbType="Bit NOT NULL")]
		public bool ShowNotepadFirstInTransaction
		{
			get
			{
				return this._ShowNotepadFirstInTransaction;
			}
			set
			{
				if ((this._ShowNotepadFirstInTransaction != value))
				{
					this.OnShowNotepadFirstInTransactionChanging(value);
					this.SendPropertyChanging();
					this._ShowNotepadFirstInTransaction = value;
					this.SendPropertyChanged("ShowNotepadFirstInTransaction");
					this.OnShowNotepadFirstInTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequireCustomerPO", DbType="Bit NOT NULL")]
		public bool RequireCustomerPO
		{
			get
			{
				return this._RequireCustomerPO;
			}
			set
			{
				if ((this._RequireCustomerPO != value))
				{
					this.OnRequireCustomerPOChanging(value);
					this.SendPropertyChanging();
					this._RequireCustomerPO = value;
					this.SendPropertyChanged("RequireCustomerPO");
					this.OnRequireCustomerPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckForDuplicateCustomerPO", DbType="Bit NOT NULL")]
		public bool CheckForDuplicateCustomerPO
		{
			get
			{
				return this._CheckForDuplicateCustomerPO;
			}
			set
			{
				if ((this._CheckForDuplicateCustomerPO != value))
				{
					this.OnCheckForDuplicateCustomerPOChanging(value);
					this.SendPropertyChanging();
					this._CheckForDuplicateCustomerPO = value;
					this.SendPropertyChanged("CheckForDuplicateCustomerPO");
					this.OnCheckForDuplicateCustomerPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCustomerItemNumber", DbType="Bit NOT NULL")]
		public bool UseCustomerItemNumber
		{
			get
			{
				return this._UseCustomerItemNumber;
			}
			set
			{
				if ((this._UseCustomerItemNumber != value))
				{
					this.OnUseCustomerItemNumberChanging(value);
					this.SendPropertyChanging();
					this._UseCustomerItemNumber = value;
					this.SendPropertyChanged("UseCustomerItemNumber");
					this.OnUseCustomerItemNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitItemSearchToCustomerItem", DbType="Bit NOT NULL")]
		public bool LimitItemSearchToCustomerItem
		{
			get
			{
				return this._LimitItemSearchToCustomerItem;
			}
			set
			{
				if ((this._LimitItemSearchToCustomerItem != value))
				{
					this.OnLimitItemSearchToCustomerItemChanging(value);
					this.SendPropertyChanging();
					this._LimitItemSearchToCustomerItem = value;
					this.SendPropertyChanged("LimitItemSearchToCustomerItem");
					this.OnLimitItemSearchToCustomerItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintItemNumber", DbType="Bit NOT NULL")]
		public bool PrintItemNumber
		{
			get
			{
				return this._PrintItemNumber;
			}
			set
			{
				if ((this._PrintItemNumber != value))
				{
					this.OnPrintItemNumberChanging(value);
					this.SendPropertyChanging();
					this._PrintItemNumber = value;
					this.SendPropertyChanged("PrintItemNumber");
					this.OnPrintItemNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenerateInvoiceDuringShipment", DbType="Bit NOT NULL")]
		public bool GenerateInvoiceDuringShipment
		{
			get
			{
				return this._GenerateInvoiceDuringShipment;
			}
			set
			{
				if ((this._GenerateInvoiceDuringShipment != value))
				{
					this.OnGenerateInvoiceDuringShipmentChanging(value);
					this.SendPropertyChanging();
					this._GenerateInvoiceDuringShipment = value;
					this.SendPropertyChanged("GenerateInvoiceDuringShipment");
					this.OnGenerateInvoiceDuringShipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyFinanceCharge", DbType="Bit NOT NULL")]
		public bool ApplyFinanceCharge
		{
			get
			{
				return this._ApplyFinanceCharge;
			}
			set
			{
				if ((this._ApplyFinanceCharge != value))
				{
					this.OnApplyFinanceChargeChanging(value);
					this.SendPropertyChanging();
					this._ApplyFinanceCharge = value;
					this.SendPropertyChanged("ApplyFinanceCharge");
					this.OnApplyFinanceChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintStatement", DbType="Bit NOT NULL")]
		public bool PrintStatement
		{
			get
			{
				return this._PrintStatement;
			}
			set
			{
				if ((this._PrintStatement != value))
				{
					this.OnPrintStatementChanging(value);
					this.SendPropertyChanging();
					this._PrintStatement = value;
					this.SendPropertyChanged("PrintStatement");
					this.OnPrintStatementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatementType", DbType="TinyInt NOT NULL")]
		public byte StatementType
		{
			get
			{
				return this._StatementType;
			}
			set
			{
				if ((this._StatementType != value))
				{
					this.OnStatementTypeChanging(value);
					this.SendPropertyChanging();
					this._StatementType = value;
					this.SendPropertyChanged("StatementType");
					this.OnStatementTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsolidateStatement", DbType="Bit NOT NULL")]
		public bool ConsolidateStatement
		{
			get
			{
				return this._ConsolidateStatement;
			}
			set
			{
				if ((this._ConsolidateStatement != value))
				{
					this.OnConsolidateStatementChanging(value);
					this.SendPropertyChanging();
					this._ConsolidateStatement = value;
					this.SendPropertyChanged("ConsolidateStatement");
					this.OnConsolidateStatementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryContactID", DbType="Int")]
		public System.Nullable<int> PrimaryContactID
		{
			get
			{
				return this._PrimaryContactID;
			}
			set
			{
				if ((this._PrimaryContactID != value))
				{
					this.OnPrimaryContactIDChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContactID = value;
					this.SendPropertyChanged("PrimaryContactID");
					this.OnPrimaryContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveCreditCard", DbType="Bit NOT NULL")]
		public bool SaveCreditCard
		{
			get
			{
				return this._SaveCreditCard;
			}
			set
			{
				if ((this._SaveCreditCard != value))
				{
					this.OnSaveCreditCardChanging(value);
					this.SendPropertyChanging();
					this._SaveCreditCard = value;
					this.SendPropertyChanged("SaveCreditCard");
					this.OnSaveCreditCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRestrictionBits", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary UserRestrictionBits
		{
			get
			{
				return this._UserRestrictionBits;
			}
			set
			{
				if ((this._UserRestrictionBits != value))
				{
					this.OnUserRestrictionBitsChanging(value);
					this.SendPropertyChanging();
					this._UserRestrictionBits = value;
					this.SendPropertyChanged("UserRestrictionBits");
					this.OnUserRestrictionBitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseElectronicPayment", DbType="Bit NOT NULL")]
		public bool UseElectronicPayment
		{
			get
			{
				return this._UseElectronicPayment;
			}
			set
			{
				if ((this._UseElectronicPayment != value))
				{
					this.OnUseElectronicPaymentChanging(value);
					this.SendPropertyChanging();
					this._UseElectronicPayment = value;
					this.SendPropertyChanged("UseElectronicPayment");
					this.OnUseElectronicPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderedBy", DbType="NVarChar(50)")]
		public string OrderedBy
		{
			get
			{
				return this._OrderedBy;
			}
			set
			{
				if ((this._OrderedBy != value))
				{
					this.OnOrderedByChanging(value);
					this.SendPropertyChanging();
					this._OrderedBy = value;
					this.SendPropertyChanged("OrderedBy");
					this.OnOrderedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer", Storage="_Customers", ThisKey="ID", OtherKey="ParentCustomerID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer", Storage="_Customer1", ThisKey="ParentCustomerID", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._ParentCustomerID = value.ID;
					}
					else
					{
						this._ParentCustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnitOfMeasure")]
	public partial class UnitOfMeasure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UOMCode;
		
		private string _Symbol;
		
		private short _Status;
		
		private string _Description;
		
		private string _ShortDescription;
		
		private System.DateTime _DateCreated;
		
		private string _CreatedBy;
		
		private System.DateTime _DateModified;
		
		private string _ModifiedBy;
		
		private EntitySet<Inventory> _Inventories;
		
		private EntitySet<Inventory> _Inventories1;
		
		private EntitySet<Inventory> _Inventories2;
		
		private EntitySet<Inventory> _Inventories3;
		
		private EntitySet<InventoryPrice> _InventoryPrices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUOMCodeChanging(string value);
    partial void OnUOMCodeChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    #endregion
		
		public UnitOfMeasure()
		{
			this._Inventories = new EntitySet<Inventory>(new Action<Inventory>(this.attach_Inventories), new Action<Inventory>(this.detach_Inventories));
			this._Inventories1 = new EntitySet<Inventory>(new Action<Inventory>(this.attach_Inventories1), new Action<Inventory>(this.detach_Inventories1));
			this._Inventories2 = new EntitySet<Inventory>(new Action<Inventory>(this.attach_Inventories2), new Action<Inventory>(this.detach_Inventories2));
			this._Inventories3 = new EntitySet<Inventory>(new Action<Inventory>(this.attach_Inventories3), new Action<Inventory>(this.detach_Inventories3));
			this._InventoryPrices = new EntitySet<InventoryPrice>(new Action<InventoryPrice>(this.attach_InventoryPrices), new Action<InventoryPrice>(this.detach_InventoryPrices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOMCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UOMCode
		{
			get
			{
				return this._UOMCode;
			}
			set
			{
				if ((this._UOMCode != value))
				{
					this.OnUOMCodeChanging(value);
					this.SendPropertyChanging();
					this._UOMCode = value;
					this.SendPropertyChanged("UOMCode");
					this.OnUOMCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasure_Inventory", Storage="_Inventories", ThisKey="ID", OtherKey="PurchaseUOMID")]
		public EntitySet<Inventory> Inventories
		{
			get
			{
				return this._Inventories;
			}
			set
			{
				this._Inventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasure_Inventory1", Storage="_Inventories1", ThisKey="ID", OtherKey="SaleUOMID")]
		public EntitySet<Inventory> Inventories1
		{
			get
			{
				return this._Inventories1;
			}
			set
			{
				this._Inventories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasure_Inventory2", Storage="_Inventories2", ThisKey="ID", OtherKey="StockUOMID")]
		public EntitySet<Inventory> Inventories2
		{
			get
			{
				return this._Inventories2;
			}
			set
			{
				this._Inventories2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasure_Inventory3", Storage="_Inventories3", ThisKey="ID", OtherKey="StorageUOMID")]
		public EntitySet<Inventory> Inventories3
		{
			get
			{
				return this._Inventories3;
			}
			set
			{
				this._Inventories3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitOfMeasure_InventoryPrice", Storage="_InventoryPrices", ThisKey="ID", OtherKey="UOMID")]
		public EntitySet<InventoryPrice> InventoryPrices
		{
			get
			{
				return this._InventoryPrices;
			}
			set
			{
				this._InventoryPrices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inventories(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasure = this;
		}
		
		private void detach_Inventories(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasure = null;
		}
		
		private void attach_Inventories1(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasure1 = this;
		}
		
		private void detach_Inventories1(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasure1 = null;
		}
		
		private void attach_Inventories2(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasure2 = this;
		}
		
		private void detach_Inventories2(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasure2 = null;
		}
		
		private void attach_Inventories3(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasure3 = this;
		}
		
		private void detach_Inventories3(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasure3 = null;
		}
		
		private void attach_InventoryPrices(InventoryPrice entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasure = this;
		}
		
		private void detach_InventoryPrices(InventoryPrice entity)
		{
			this.SendPropertyChanging();
			entity.UnitOfMeasure = null;
		}
	}
}
#pragma warning restore 1591
